{"version":3,"names":["StringUtils","toTitleCase","string","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","s3pPrepaidReportCss","S3pPrepaidReport","this","log","debug","locale","async","json","index","start","Date","setUTCHours","setUTCFullYear","year","month","stop","templateTs","Array","from","length","getUTCDate","_","i","periodTs","drivers","periods","period","ts","getDate","missingDays","filter","x","includes","missingDay","push","generateMissingDay","sort","a","b","parse","weeks","reduce","item","weekNumber","getWeek","week","monthSummary","generateMonthSummary","periodSummary","generatePeriodSummary","Object","entries","lastDayOfWeek","findIndex","splice","generateWeekSummary","Number","parseInt","componentDidLoad","div","document","createElement","id","body","appendChild","toLocaleString","_tsType","kms","absNR","absRem","available","availableDE","driving","end","expenses","bonus","evening","lunch","morning","night","total","unique","hdRem","matAM","service","serviceGlobal","working","weekSummary","toString","padStart","toISOString","getRowColor","render","h","Host","class","_a","legalStructure","_b","siret","_c","lastName","_d","firstName","_e","toLocaleDateString","timeZone","_f","_h","_g","socialExternalId","cellspacing","_j","style","backgroundColor","weekday","day","minimumFractionDigits","maximumFractionDigits","generatedAt","date","time"],"sources":["./src/utils/string.ts","./src/components/s3p-prepaid-report/s3p-prepaid-report.css?tag=s3p-prepaid-report","./src/components/s3p-prepaid-report/s3p-prepaid-report.tsx"],"sourcesContent":["export namespace StringUtils {\n  /**\n   * Converts all words with capitalize letter.\n   */\n  export function toTitleCase(string: string): string {\n    return string\n      .toLowerCase()\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n}\n",".prepaid-report {\n  font-family: Helvetica, sans-serif;\n  font-size: 15px;\n}\n\n.prepaid-report-header {\n  border: 2px solid black;\n  border-radius: 15px;\n  padding: 3px;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 8px;\n}\n\n.prepaid-report-footer {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-size: 11px;\n  margin-top: 10px;\n}\n\n.invisible-cell {\n  border: none !important;\n  background-color: white !important;\n}\n\n.prepaid-report-header-line {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.prepaid-report-table {\n  font-family: Helvetica, sans-serif;\n  font-size: 12px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.prepaid-report-thead > th {\n  border: 1px solid black;\n  font-weight: normal;\n  border-collapse: collapse;\n}\n\n.prepaid-report-tbody td {\n  border: 1px solid black;\n  font-weight: normal;\n  text-align: right;\n  box-sizing: border-box;\n  border-collapse: collapse;\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport debug from 'debug';\nimport { getWeek } from '../../utils/utils';\nimport { PeriodsStruct, PrepaidReport } from './interfaces/prepaidReport.interface';\nimport { StringUtils } from '../../utils/string';\n\n@Component({\n  tag: 's3p-prepaid-report',\n  styleUrl: 's3p-prepaid-report.css',\n  shadow: false,\n})\nexport class S3pPrepaidReport {\n  private readonly log: debug.Debugger = debug('S3pPrepaidReport');\n\n  /** The prepaid report json from the back. */\n  @Prop() json: PrepaidReport;\n\n  /** Index of the wanted driver. */\n  @Prop() index: number;\n\n  private locale: string = 'fr-FR';\n  private start: Date;\n  private stop: Date;\n\n  /** Init of the prepaid report. */\n  async componentWillLoad() {\n    if (this.json == null || this.index == null) {\n      this.log('You must set json and index prop.');\n      return;\n    }\n\n    this.start = new Date();\n    this.start.setUTCHours(0, 0, 0, 0);\n    this.start.setUTCFullYear(this.json.year, this.json.month - 1, 1);\n\n    this.stop = new Date();\n    this.stop.setUTCHours(23, 59, 59, 999);\n    this.stop.setUTCFullYear(this.json.year, this.json.month, 0);\n\n    // Add missing days\n    const templateTs: number[] = Array.from({ length: this.stop.getUTCDate() }, (_, i) => i + 1);\n    const periodTs: number[] = this.json.drivers[this.index].periods.map(period => new Date(period.ts).getDate());\n    const missingDays: number[] = templateTs.filter(x => !periodTs.includes(x));\n    for (const missingDay of missingDays) {\n      const ts = new Date();\n      ts.setUTCFullYear(this.json.year, this.json.month - 1, missingDay);\n      this.json.drivers[this.index].periods.push(this.generateMissingDay(ts));\n    }\n    // Sort periods\n    this.json.drivers[this.index].periods = this.json.drivers[this.index].periods.sort((a, b) => Date.parse(a.ts) - Date.parse(b.ts));\n\n    // Groups by week number\n    const weeks = this.json.drivers[this.index].periods.reduce((weeks, item) => {\n      const weekNumber: number = getWeek(new Date(item.ts));\n      const week = weeks[weekNumber] || [];\n      week.push(item);\n      weeks[weekNumber] = week;\n      return weeks;\n    }, {});\n\n    // Generate month and period summary\n    const monthSummary = this.generateMonthSummary();\n    const periodSummary = this.generatePeriodSummary();\n\n    // Add week summary\n    for (const [weekNumber, week] of Object.entries<PeriodsStruct[]>(weeks)) {\n      const lastDayOfWeek = week[week.length - 1];\n      const index = this.json.drivers[this.index].periods.findIndex(period => period.ts === lastDayOfWeek.ts);\n      // Add the week summary after the end of the week\n      if (index > -1) {\n        this.json.drivers[this.index].periods.splice(index + 1, 0, this.generateWeekSummary(Number.parseInt(weekNumber), week));\n      }\n    }\n\n    // Add month summary\n    this.json.drivers[this.index].periods.push(monthSummary);\n    // Add period summary\n    this.json.drivers[this.index].periods.push(periodSummary);\n  }\n\n  componentDidLoad() {\n    const div: HTMLDivElement = document.createElement<'div'>('div');\n    div.id = 'waiting';\n    document.body.appendChild(div);\n  }\n\n  /**\n   * Generate the month summary for the current driver.\n   * @returns {PeriodsStruct} A month summary in period.\n   */\n  private generateMonthSummary(): PeriodsStruct {\n    const month: Date = new Date(this.json.year, this.json.month - 1);\n\n    const monthSummary: PeriodsStruct = {\n      ts: StringUtils.toTitleCase(month.toLocaleString(this.locale, { month: 'long' })),\n      _tsType: 'string',\n      kms: 0,\n      absNR: null,\n      absRem: null,\n      available: null,\n      availableDE: null,\n      driving: null,\n      end: null,\n      expenses: {\n        bonus: null,\n        evening: null,\n        lunch: null,\n        morning: null,\n        night: null,\n        total: null,\n        unique: null,\n      },\n      hdRem: null,\n      matAM: null,\n      night: null,\n      service: null,\n      serviceGlobal: null,\n      start: null,\n      working: null,\n    };\n\n    // Make the sums of period on the week\n    for (const period of this.json.drivers[this.index].periods) {\n      monthSummary.driving += period.driving;\n      monthSummary.working += period.working;\n      monthSummary.available += period.available;\n      // monthSummary.availableDE += period.availableDE;\n      monthSummary.service += period.service;\n      // monthSummary.hdRem += period.hdRem;\n      // monthSummary.absRem += period.absRem;\n      // monthSummary.absNR += period.absNR;\n      monthSummary.night += period.night;\n      monthSummary.kms += period.kms;\n      monthSummary.serviceGlobal += period.serviceGlobal;\n      monthSummary.expenses.bonus += period.expenses.bonus;\n      monthSummary.expenses.evening += period.expenses.evening;\n      monthSummary.expenses.lunch += period.expenses.lunch;\n      monthSummary.expenses.morning += period.expenses.morning;\n      monthSummary.expenses.night += period.expenses.night;\n      monthSummary.expenses.total += period.expenses.total;\n      monthSummary.expenses.unique += period.expenses.unique;\n    }\n\n    return monthSummary;\n  }\n\n  /**\n   * Generate the period summary for the current driver.\n   * @returns {PeriodsStruct} A period summary in period.\n   */\n  private generatePeriodSummary(): PeriodsStruct {\n    const periodSummary: PeriodsStruct = {\n      ts: 'PÃ©riode',\n      _tsType: 'string',\n      kms: 0,\n      absNR: null,\n      absRem: null,\n      available: null,\n      availableDE: null,\n      driving: null,\n      end: null,\n      expenses: {\n        bonus: null,\n        evening: null,\n        lunch: null,\n        morning: null,\n        night: null,\n        total: null,\n        unique: null,\n      },\n      hdRem: null,\n      matAM: null,\n      night: null,\n      service: null,\n      serviceGlobal: null,\n      start: null,\n      working: null,\n    };\n\n    // Make the sums of period on the week\n    for (const period of this.json.drivers[this.index].periods) {\n      periodSummary.driving += period.driving;\n      periodSummary.working += period.working;\n      periodSummary.available += period.available;\n      // periodSummary.availableDE += period.availableDE;\n      periodSummary.service += period.service;\n      // periodSummary.hdRem += period.hdRem;\n      // periodSummary.absRem += period.absRem;\n      // periodSummary.absNR += period.absNR;\n      periodSummary.night += period.night;\n      periodSummary.kms += period.kms;\n      periodSummary.serviceGlobal += period.serviceGlobal;\n      periodSummary.expenses.bonus += period.expenses.bonus;\n      periodSummary.expenses.evening += period.expenses.evening;\n      periodSummary.expenses.lunch += period.expenses.lunch;\n      periodSummary.expenses.morning += period.expenses.morning;\n      periodSummary.expenses.night += period.expenses.night;\n      periodSummary.expenses.total += period.expenses.total;\n      periodSummary.expenses.unique += period.expenses.unique;\n    }\n\n    return periodSummary;\n  }\n\n  /**\n   * Generate a week summary on period format.\n   * @param {number} weekNumber Nth week of the year.\n   * @param {PeriodsStruct[]} periods Periods for the current week.\n   * @returns {PeriodsStruct} A week summary in period.\n   */\n  private generateWeekSummary(weekNumber: number, periods: PeriodsStruct[]): PeriodsStruct {\n    const weekSummary: PeriodsStruct = {\n      ts: `Semaine ${weekNumber.toString().padStart(2, '0')}`,\n      _tsType: 'string',\n      kms: 0,\n      absNR: null,\n      absRem: null,\n      available: null,\n      availableDE: null,\n      driving: null,\n      end: null,\n      expenses: {\n        bonus: null,\n        evening: null,\n        lunch: null,\n        morning: null,\n        night: null,\n        total: null,\n        unique: null,\n      },\n      hdRem: null,\n      matAM: null,\n      night: null,\n      service: null,\n      serviceGlobal: null,\n      start: null,\n      working: null,\n    };\n\n    // Make the sums of period on the week\n    for (const period of periods) {\n      weekSummary.driving += period.driving;\n      weekSummary.working += period.working;\n      weekSummary.available += period.available;\n      // weekSummary.availableDE += period.availableDE;\n      weekSummary.service += period.service;\n      // weekSummary.hdRem += period.hdRem;\n      // weekSummary.absRem += period.absRem;\n      // weekSummary.absNR += period.absNR;\n      weekSummary.night += period.night;\n      weekSummary.kms += period.kms;\n      weekSummary.serviceGlobal += period.serviceGlobal;\n      weekSummary.expenses.bonus += period.expenses.bonus;\n      weekSummary.expenses.evening += period.expenses.evening;\n      weekSummary.expenses.lunch += period.expenses.lunch;\n      weekSummary.expenses.morning += period.expenses.morning;\n      weekSummary.expenses.night += period.expenses.night;\n      weekSummary.expenses.total += period.expenses.total;\n      weekSummary.expenses.unique += period.expenses.unique;\n    }\n\n    return weekSummary;\n  }\n\n  /**\n   * Create a missing day with no values.\n   * @param {Date} ts Timestamp of the missing day.\n   * @returns {PeriodsStruct} A missing day in period.\n   */\n  private generateMissingDay(ts: Date): PeriodsStruct {\n    return {\n      ts: ts.toISOString().split('T')[0],\n      _tsType: 'date',\n      kms: 0,\n      absNR: null,\n      absRem: null,\n      available: null,\n      availableDE: null,\n      driving: null,\n      end: null,\n      expenses: {\n        bonus: null,\n        evening: null,\n        lunch: null,\n        morning: null,\n        night: null,\n        total: null,\n        unique: null,\n      },\n      hdRem: null,\n      matAM: null,\n      night: null,\n      service: null,\n      serviceGlobal: null,\n      start: null,\n      working: null,\n    };\n  }\n\n  /**\n   * Get the color of the row concording to its ts.\n   * @param {string} ts String for the ts.\n   * @returns {string} Color for the row.\n   */\n  private getRowColor(ts: string): string {\n    if (ts.includes('Semaine')) {\n      return '#e2e2fa';\n    } else if (ts.includes('PÃ©riode')) {\n      return '#9393fb';\n    } else {\n      return '#c5c5fb';\n    }\n  }\n\n  render() {\n    return (\n      <Host class=\"prepaid-report\">\n        <header class=\"prepaid-report-header\">\n          <div class=\"prepaid-report-header-line\">\n            <span>\n              SociÃ©tÃ© : {this.json?.legalStructure} - {this.json?.siret}\n            </span>\n            <span>\n              <b>SynthÃ¨se des disques et frais</b>\n            </span>\n          </div>\n          <div class=\"prepaid-report-header-line\">\n            <span>\n              Conducteur : {this.json?.drivers[this.index].lastName.toUpperCase()} {this.json?.drivers[this.index].firstName.toUpperCase()}\n            </span>\n            <span>\n              <b>\n                Du {this.start?.toLocaleDateString(this.locale, { timeZone: 'UTC' })} au {this.stop?.toLocaleDateString(this.locale, { timeZone: 'UTC' })}\n              </b>\n            </span>\n          </div>\n          <div class=\"prepaid-report-header-line\">\n            <span>Matricule : {this.json?.drivers[this.index].socialExternalId ?? 'N/A'}</span>\n          </div>\n        </header>\n\n        <main>\n          <table class=\"prepaid-report-table\" cellspacing=\"0\">\n            <thead class=\"prepaid-report-thead\">\n              <th class=\"invisible-cell\"></th>\n              <th>DÃ©but</th>\n              <th>Fin</th>\n              <th>Conduite</th>\n              <th>Travail</th>\n              <th>Dispo</th>\n              <th>Disp DE</th>\n              <th>Service</th>\n              <th>HD rem</th>\n              <th>Abs rem</th>\n              <th>Abs nr</th>\n              <th>Mat/AM</th>\n              <th>Nuit</th>\n              <th>Kms</th>\n              <th>Serv global</th>\n              <th class=\"invisible-cell\"></th>\n              <th>Pt. D</th>\n              <th>DÃ©j</th>\n              <th>DÃ®ner</th>\n              <th>Nuit</th>\n              <th>Divers</th>\n              <th>Total</th>\n              <th>Prime</th>\n            </thead>\n            <tbody class=\"prepaid-report-tbody\">\n              {this.json?.drivers[this.index].periods.map(period => {\n                const ts = new Date(period.ts);\n\n                // Do not display 0 values\n                if (period.available === 0) {\n                  period.available = null;\n                }\n\n                if (period.night === 0) {\n                  period.night = null;\n                }\n\n                // if (period.kms === 0) {\n                //   period.kms = null;\n                // }\n\n                if (period.expenses.morning === 0) {\n                  period.expenses.morning = null;\n                }\n\n                if (period.expenses.bonus === 0) {\n                  period.expenses.bonus = null;\n                }\n\n                if (period.expenses.evening === 0) {\n                  period.expenses.evening = null;\n                }\n\n                if (period.expenses.lunch === 0) {\n                  period.expenses.lunch = null;\n                }\n\n                if (period.expenses.night === 0) {\n                  period.expenses.night = null;\n                }\n\n                if (period.expenses.night === 0) {\n                  period.expenses.night = null;\n                }\n\n                if (period.expenses.unique === 0) {\n                  period.expenses.unique = null;\n                }\n\n                if (period.expenses.total === 0) {\n                  period.expenses.total = null;\n                }\n\n                return (\n                  <tr style={{ backgroundColor: period._tsType === 'string' ? this.getRowColor(period.ts) : 'none' }}>\n                    <td>\n                      {period._tsType === 'string'\n                        ? period.ts\n                        : ts.toLocaleDateString(this.locale, { timeZone: 'UTC', weekday: 'short', year: 'numeric', month: 'numeric', day: 'numeric' })}\n                    </td>\n                    <td>{period.start}</td>\n                    <td>{period.end}</td>\n                    <td>{period.driving?.toLocaleString(this.locale, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                    <td>{period.working?.toLocaleString(this.locale, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                    <td>{period.available?.toLocaleString(this.locale, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                    <td>{period.availableDE}</td>\n                    <td>{period.service?.toLocaleString(this.locale, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                    <td>{period.hdRem}</td>\n                    <td>{period.absRem}</td>\n                    <td>{period.absNR}</td>\n                    <td>{period.matAM}</td>\n                    <td>{period.night?.toLocaleString(this.locale, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                    <td>{period.kms}</td>\n                    <td>{period.serviceGlobal?.toLocaleString(this.locale, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                    <td class=\"invisible-cell\"></td>\n                    <td>{period.expenses.morning}</td>\n                    <td>{period.expenses.lunch}</td>\n                    <td>{period.expenses.evening}</td>\n                    <td>{period.expenses.night}</td>\n                    <td>{period.expenses.unique}</td>\n                    <td>{period.expenses.total?.toLocaleString(this.locale, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                    <td>{period.expenses.bonus?.toLocaleString(this.locale, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </main>\n\n        <footer class=\"prepaid-report-footer\">\n          <span>\n            {/* <i>GÃ©nÃ©rÃ© le 19/04/2023 16:03:49</i> */}\n            <i>\n              GÃ©nÃ©rÃ© le {this.json.generatedAt.date} {this.json.generatedAt.time}\n            </i>\n          </span>\n          <span>\n            {/* <i>Page 1/2</i> */}\n            <i>\n              Page {(this.index + 1).toString()}/{this.json.drivers.length.toString()}\n            </i>\n          </span>\n        </footer>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}