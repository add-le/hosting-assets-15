import{r as t,h as r}from"./p-d5a6e412.js";import{p as o,r as e}from"./p-27722fd8.js";const n='*{font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif}.s3pChartComponent .input-custom{padding:8px;border:1px solid var(--primary-no-color, #ccc);border-radius:4px;resize:vertical;text-align:center;margin:2px !important}.s3pChartComponent .btnChart{margin:5px;padding:5px;border:solid 2px var(--primary-color, #921a1d);font:inherit;border-radius:4px;font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;color:var(--primary-color, #921a1d);background-color:transparent;cursor:pointer;text-transform:uppercase;font-size:14px;fill:var(--primary-color, #921a1d);font-weight:500;letter-spacing:0.06em}.s3pChartComponent .btnChart:hover{background-color:rgba(var(--primary-color-rgba, 146, 26, 29), 0.3)}.s3pChartComponent .btnChart:focus{outline:var(--primary-color-shade, #7a1a1e) auto 1px}.s3pChartComponent .btnChart:disabled,.s3pChartComponent .btnChart:disabled:hover{color:var(--secondary-no-color, #8d8d8d);background-color:rgba(var(--secondary-no-color-rgba, 141, 141, 141), 0.3);border:solid 2px var(--none-color, rgb(141, 141, 141))}.s3pChartComponent .btnChart-cancel{color:var(--secondary-no-color, #8d8d8d);border:solid 2px var(--secondary-no-color, #8d8d8d)}.s3pChartComponent .btnChart-cancel:hover{background-color:rgba(var(--secondary-no-color-rgba, 141, 141, 141), 0.3)}.s3pChartComponent .btnChart-cancel:focus{outline:var(--secondary-no-color, #8d8d8d) auto 1px}.s3pChartComponent .select-custom{line-height:normal;position:relative;background:transparent;border-radius:4px;width:50%}.s3pChartComponent .textarea-custom{padding:8px;border:1px solid var(--primary-no-color, #ccc);border-radius:4px;margin:8px;resize:vertical;width:90%}.s3pChartComponent .load-icon{display:none !important}.s3pChartComponent .icon-svg{width:1.5em;height:1.5em}.s3pChartComponent .icon-tachy{width:23px;padding:2px;-webkit-filter:brightness(0) invert(1);filter:brightness(0) invert(1);margin:0;vertical-align:top}.s3pChartComponent .activity{color:white;border-radius:5px;margin:auto;padding:2px}.s3pChartComponent .restActivity{background-color:var(--primary-rest-color, #2f7f33)}.s3pChartComponent .workActivity{background-color:var(--primary-work-color, #d0000d)}.s3pChartComponent .availableActivity{background-color:var(--primary-available-color, #e67d20)}.s3pChartComponent .driverActivity{background-color:var(--primary-drive-color, #01599d)}.s3pChartComponent .otherActivity{background-color:var(--primary-custom-activity-color, #7f8c8d)}.s3pChartComponent .center-text{text-align:center}.s3pChartComponent .no-display{display:none}.s3pChartComponent .tableCustom{width:100%;text-align:center}.s3pChartComponent .tableCustom tr:nth-child(even){background-color:#fff}.s3pChartComponent .tableCustom tr:nth-child(odd){background-color:#eee}.s3pChartComponent .customCheckboxContainer{display:block;position:relative;margin:12px;margin-right:50px !important;cursor:pointer;font-size:16px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.s3pChartComponent .customCheckboxContainer input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.s3pChartComponent .customCheckmark{position:absolute;top:0;height:25px;width:25px;margin:2px 2px 2px 10px;background-color:#eee}.s3pChartComponent .customCheckboxContainer:hover input~.customCheckmark{background-color:#ccc}.s3pChartComponent .customCheckboxContainer input:checked~.customCheckmark{background-color:var(--primary-color, #921a1d)}.s3pChartComponent .customCheckmark:after{content:"";position:absolute;display:none}.s3pChartComponent .customCheckboxContainer input:checked~.customCheckmark:after{display:block}.s3pChartComponent .customCheckboxContainer .customCheckmark:after{left:9px;top:1px;width:6px;height:15px;border:solid white;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.s3pChartComponent .container-error{text-align:center;color:red;font-weight:bold}.s3pChartComponent .container-error p{margin:0}.s3pChartComponent .container-warning{text-align:center;font-weight:bold}.iconClick{cursor:pointer}html{-webkit-print-color-adjust:exact}body{margin:0;background-color:white}main{margin:0px 10px 10px 10px;font-size:14px}.report{font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif}table{width:100%;font-size:11px}.col-date{width:100px}table,th,td{border:0.1px solid white}th,td{padding:1px;text-align:center}th{text-transform:uppercase;background:rgba(var(--primary-color-rgba, 249, 190, 31), 0.6)}tr:nth-child(even){background-color:#fff0ac}.container-temperature{position:relative;margin:15px}.userInput{font-size:12px}.userInput label{width:inherit !important}.container-temperature s3p-temperature .chartD3{height:inherit !important;max-height:inherit !important;width:inherit !important;max-width:inherit !important}';const a=class{constructor(r){t(this,r);this.registration=undefined;this.start=undefined;this.end=undefined;this.statesSeleted=[];this.provider=undefined;this.temperatureData=undefined;this.statesGroups=[];this.dataTable=[];this.headTable=[];this.dataChart={};this.statesName={}}async componentDidLoad(){this.setTemperatureData()}setTemperatureData(){if(this.temperatureData&&this.temperatureData[this.provider]&&this.temperatureData[this.provider].events){const t=this.temperatureData[this.provider].events.find((t=>t["inputId"])).inputId;for(const r of this.statesSeleted){this.statesName[r]=this.setNameOfSensor(r,this.temperatureData[this.provider].events,t)}const r=[];this.headTable=[];const o=this.temperatureData[this.provider].events;for(const t of o){const o={};for(const r of this.statesSeleted){if(t[r]!=null){o[r]=t[r];if(!this.headTable.includes(r)){this.headTable.push(r)}if(new RegExp("tempSensor(0?[1-9]|[1-9][0-9])Value").test(r)){const e=r.match(/\d+/);if(t[`tempSensor${e}Name`]){o[`tempSensor${e}Name`]=t[`tempSensor${e}Name`]}}}}if(Object.keys(o).length>0){r.push(Object.assign(Object.assign({},o),{ts:t.ts,inputId:t.inputId,provider:t.provider}))}}this.dataTable=r;this.dataChart[this.provider]={events:r}}}setNameOfSensor(t,r,o){if(this.statesGroups&&this.statesGroups.length){let r=[];for(const t of this.statesGroups){if(t&&t.displayModule==="temperature"){r=[...r,...t.states]}}const e=r.find((r=>r.inputId===o&&t===r.state));if(e){return e.name}}if(new RegExp("tempSensor(0?[1-9]|[1-9][0-9])Value").test(t)){const o=t.match(/\d+/);const e=r.find((t=>t[`tempSensor${o}Name`]));if(e){return e[`tempSensor${o}Name`]}else{return t}}else{return t}}render(){return r("div",{class:"report"},r("report-header",{name:"Température"}),r("main",null,r("p",null,"Véhicule : ",r("strong",null,this.registration)),r("p",null,"Période : Du ",r("strong",null,o(this.start))," au ",r("strong",null,o(this.end))),r("div",{class:"container-temperature"},Object.keys(this.dataChart).length?r("s3p-temperature",{events:this.dataChart,display_start:this.start,display_end:this.end,statesGroups:this.statesGroups}):""),r("table",null,r("thead",null,r("tr",null,r("th",{class:"col-date"},"Date"),this.headTable.map((t=>r("th",null,this.statesName[t]))))),r("tbody",null,this.dataTable.map((t=>r("tr",null,r("td",null,o(new Date(t.ts))),this.headTable.map((o=>r("td",null,t[o]!=null?e(t[o],1):""))))))))))}static get watchers(){return{temperatureData:["setTemperatureData"]}}};a.style=n;export{a as s3p_temperature_report};
//# sourceMappingURL=p-af4bd1eb.entry.js.map