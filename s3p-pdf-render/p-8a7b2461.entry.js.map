{"version":3,"names":["descending","a","b","NaN","min","values","valueof","n","length","i","value","Step","context","t","this","_context","_t","prototype","areaStart","_line","areaEnd","lineStart","_x","_y","_point","lineEnd","lineTo","closePath","point","x","y","moveTo","x1","stepAfter","reportHeaderCss","ReportHeader","render","h","class","src","height","alt","name","temperatureCss","Temperature","constructor","hostRef","idChart","events","time_parse","d3.utcParse","time_format","d3.timeFormat","regexSondes","regexConsignePoints","margin","top","right","bottom","left","sondes","consignePoints","sondeName","log","debug","async","eventsTimeline","chart_width","chart_height","setEvents","provider","refresh","d3.select","selectAll","remove","init","setStatesProp","setAllDataChart","data","allSondes","Object","keys","allDataChart","map","line","allConsignePoints","minmax","minMax","min_value","max_value","maxTimeTemp","d3.max","d","date","initD3","prop","drawSensorLine","drawPointLine","drawTimeline","sendStateChecked","userInput","enter","append","style","color","html","attr","property","isCheck","on","drawChart","setTooltipMultiLine","statesProp","statesGroups","group","displayModule","states","event","state","pushData","type","regex","RegExp","test","push","ts","num","key","inputId","previousEvent","index","activity","Date","display_end","start","end","lastEvent_end","svg","x_scale","sondesChecked","filter","sonde","consignePointsChecked","propChecked","stateChecked","emit","select","id","s","exit","selectPoints","p","className","datum","d3.line","y_scale","curve","d3.curveStepAfter","drawLine","lines","number","match","stateProp","getColorAndName","sondeIndex","findIndex","createLine","findState","find","e","getSondeName","getRandomColor","that","res_nested","d3.nest","entries","all","mouseG","mousePerLine","info","mouse","d3.mouse","xDate","invert","bisect","d3.bisector","idx","pointClicked","xValue","d3.selectAll","sortingObj","sort","d3.descending","sortingArr","res_nested1","slice","indexOf","divSize","document","getElementById","clientWidth","divSizeHeight","clientHeight","check","toLocaleString","d3.scaleTime","domain","display_start","range","d3.scaleLinear","d3.min","Number","x_axis","d3.axisBottom","ticks","tickFormat","y_axis","d3.axisLeft","call","randomColor","some","toLowerCase","consignePoint","Math","floor","random","sondeNumber","findEv","array","minMaxArray","reduce","r","max"],"sources":["./node_modules/d3-array/src/descending.js","./node_modules/d3-array/src/min.js","./node_modules/d3-shape/src/curve/step.js","./src/components/report-header/report-header.css?tag=report-header","./src/components/report-header/report-header.tsx","./node_modules/@s3pweb/s3p-chart/dist/collection/components/temperature/temperature.css?tag=s3p-temperature","./node_modules/@s3pweb/s3p-chart/dist/collection/components/temperature/temperature.js"],"sourcesContent":["export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","header {\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n  padding: 10px 10px 10px 10px;\n}\nh1 {\n  margin: auto;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'report-header',\n  styleUrl: 'report-header.css',\n})\nexport class ReportHeader {\n  @Prop() name;\n  render() {\n    return (\n      <header>\n        <img class=\"logo\" src={'https://app.mapandtruck.io/assets/mapandtruck/logo_maptrcuk.png'} height=\"70\" alt=\"s3pweb\"></img>\n        <h1>Rapport de {this.name}</h1>\n      </header>\n    );\n  }\n}\n","s3p-temperature .s3pTemperatureDiv {\n  width: 100%;\n}\n\ns3p-temperature .chartD3 {\n  width: 100%;\n  max-width: 1000px;\n  background-color: white;\n  height: 350px !important;\n  max-height: 350px;\n}\n\ns3p-temperature .chartD3 text {\n  font: 14px sans-serif;\n}\n\ns3p-temperature .chartD3 #tooltiptemp {\n  position: absolute;\n  width: 150px;\n  padding: 10px;\n  background-color: white;\n  border-radius: 5px;\n  border: 1px solid #000;\n  pointer-events: none;\n  display: none;\n  font-family: sans-serif;\n  font-size: 12px;\n  font-weight: bold;\n}\n","import { Component, h, Prop, Element, Event, Watch, State } from '@stencil/core';\nimport debug from \"debug/src/browser\";\nimport * as d3 from 'd3';\nexport class Temperature {\n    constructor() {\n        // id for css\n        this.idChart = 'chart'; // 's3p-temperature-chart'\n        // events\n        this.events = []; // events temperature\n        this.time_parse = d3.utcParse(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n        this.time_format = d3.timeFormat('%d-%m-%Y - %H-%M');\n        // regex define state choice\n        this.regexSondes = ['tempSensor(0?[1-9]|[1-9][0-9])Value', 'dischargeAir(0?[1-9]|[1-9][0-9])Temp', 'returnAir(0?[1-9]|[1-9][0-9])Temp'];\n        this.regexConsignePoints = ['tempSetpoint(0?[1-9]|[1-9][0-9])'];\n        // size and margin\n        this.margin = { top: 20, right: 10, bottom: 70, left: 70 };\n        this.sondes = [];\n        this.consignePoints = [];\n        this.sondeName = [];\n        this.log = debug('components:temperature');\n    }\n    async componentDidLoad() {\n        this.log(' componentDidLoad this.events ', this.events);\n        this.log(' componentDidLoad this.eventsTimeline ', this.eventsTimeline);\n        // define chart size\n        this.chart_width = 1000 - this.margin.left - this.margin.right;\n        this.chart_height = 300 - this.margin.top - this.margin.bottom;\n        // set chart if data on this.events\n        this.setEvents();\n    }\n    setEvents() {\n        this.log('setEvents from temperature component', this.events);\n        if (this.events) {\n            for (let provider in this.events) {\n                if (this.events[provider].events && this.events[provider].events.length) {\n                    this.refresh();\n                    break;\n                }\n            }\n        }\n    }\n    refresh() {\n        this.sondes = [];\n        this.consignePoints = [];\n        this.sondeName = [];\n        // remove all html child elements\n        d3.select(`#${this.idChart}`).selectAll(\"*\").remove();\n        this.init();\n    }\n    init() {\n        this.log('*** init ***');\n        // set states Prop for define name and color of line\n        this.setStatesProp();\n        // define all lines and their data\n        this.setAllDataChart();\n        // set this.data and allSondes and allConsignePoints\n        this.data = [];\n        let allSondes = Object.keys(this.allDataChart.sondes);\n        allSondes.map((line) => this.data = [...this.data, ...this.allDataChart.sondes[line]]);\n        let allConsignePoints = Object.keys(this.allDataChart.consignePoints);\n        allConsignePoints.map((line) => this.data = [...this.data, ...this.allDataChart.consignePoints[line]]);\n        this.log('this.data', this.data);\n        // get max and min temperature data\n        let minmax = this.minMax(this.data);\n        this.min_value = minmax[0];\n        this.max_value = minmax[1];\n        this.maxTimeTemp = d3.max(this.data, d => {\n            return d.date;\n        });\n        //console.log('max_value:', this.max_value)\n        //console.log('min_value:', this.min_value)\n        this.initD3();\n        // create all sensor line \n        for (let prop of allSondes) {\n            this.drawSensorLine(prop, this.allDataChart.sondes[prop]);\n        }\n        for (let prop of allConsignePoints) {\n            this.drawPointLine(prop, this.allDataChart.consignePoints[prop]);\n        }\n        // create timeline\n        this.drawTimeline();\n        // emit event with lines checked\n        this.sendStateChecked();\n        // create checkbox\n        this.userInput.selectAll('checkboxes')\n            .data([...this.sondes, ...this.consignePoints]).enter()\n            .append('label')\n            .style('margin-bottom', '5px')\n            .style('margin-right', '2px')\n            .style('font', 'sans-serif')\n            .style('color', d => (d.color) ? d.color : 'black')\n            .html(d => d.name)\n            .append('input')\n            .attr('type', 'checkbox')\n            .property('checked', d => {\n            return d.isCheck;\n        })\n            .on('change', d => {\n            // console.log('checkbox on change d', d)\n            d.isCheck = !d.isCheck;\n            this.drawChart(d);\n        });\n        // create tooltip\n        this.setTooltipMultiLine();\n    }\n    setStatesProp() {\n        this.statesProp = [];\n        if (this.statesGroups && this.statesGroups.length) {\n            for (const group of this.statesGroups) {\n                if (group && group.displayModule === 'temperature') {\n                    this.statesProp = [...this.statesProp, ...group.states];\n                }\n            }\n        }\n        this.log('this.statesProp', this.statesProp);\n    }\n    setAllDataChart() {\n        this.allDataChart = { sondes: {}, consignePoints: {} };\n        for (let provider of Object.keys(this.events)) {\n            if (this.events[provider].events && this.events[provider].events.length) {\n                for (let event of this.events[provider].events) {\n                    for (let state of Object.keys(event)) {\n                        this.pushData(state, event, provider);\n                    }\n                }\n            }\n        }\n        this.log('this.allDataChart', this.allDataChart);\n    }\n    pushData(state, event, provider) {\n        let type;\n        for (let regex of this.regexSondes) {\n            if (new RegExp(regex).test(state)) {\n                type = 'sondes';\n                break;\n            }\n        }\n        if (!type) {\n            for (let regex of this.regexConsignePoints) {\n                if (new RegExp(regex).test(state)) {\n                    type = 'consignePoints';\n                    break;\n                }\n            }\n        }\n        if (type) {\n            if (!this.allDataChart[type][state]) {\n                this.allDataChart[type][state] = [];\n            }\n            this.allDataChart[type][state].push({\n                date: this.time_parse(event.ts),\n                num: event[state],\n                key: state,\n                provider: provider,\n                inputId: event.inputId\n            });\n        }\n    }\n    drawTimeline() {\n        let data = [];\n        if (this.eventsTimeline && this.eventsTimeline[0]) {\n            let previousEvent;\n            for (let index of Object.keys(this.eventsTimeline)) {\n                let event = this.eventsTimeline[index];\n                if (event.activity && event.ts && new Date(event.ts) <= new Date(this.display_end)) {\n                    if (event.activity === \"U\") {\n                        event.activity = \"R\";\n                    }\n                    if (!previousEvent) {\n                        previousEvent = event;\n                    }\n                    else {\n                        if (event.activity !== previousEvent.activity) {\n                            data.push({ activity: previousEvent.activity, start: previousEvent.ts, end: event.ts });\n                            previousEvent = event;\n                        }\n                    }\n                }\n            }\n            if (this.lastEvent_end && new Date(this.lastEvent_end) <= new Date(this.display_end)) {\n                data.push({ activity: previousEvent.activity, start: previousEvent.ts, end: this.lastEvent_end });\n            }\n        }\n        this.svg.append(\"g\")\n            .attr('class', 'timeline').selectAll(\"rect\")\n            .data(data)\n            .enter().append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", (d) => {\n            //console.log(this.x_scale(new Date(d.start)))\n            return this.x_scale(new Date(d.start));\n        })\n            .attr(\"y\", (d) => {\n            switch (d.activity) {\n                case \"D\":\n                    return this.chart_height + this.margin.bottom - 45;\n                case \"W\":\n                    return this.chart_height + this.margin.bottom - 35;\n                case \"A\":\n                    return this.chart_height + this.margin.bottom - 25;\n                case \"R\":\n                    return this.chart_height + this.margin.bottom - 15;\n            }\n        })\n            .attr(\"width\", (d) => {\n            return this.x_scale(new Date(d.end)) - this.x_scale(new Date(d.start));\n        })\n            .style(\"fill\", (d) => {\n            switch (d.activity) {\n                case \"D\":\n                    return 'var(--primary-drive-color, #01599d)';\n                case \"W\":\n                    return 'var(--primary-work-color, #d0000d)';\n                case \"A\":\n                    return 'var(--primary-available-color, #e67d20)';\n                case \"R\":\n                    return 'var(--primary-rest-color, #2f7f33)';\n            }\n        })\n            .style(\"opacity\", 0.7)\n            .attr(\"height\", (d) => {\n            switch (d.activity) {\n                case \"D\":\n                    return 45;\n                case \"W\":\n                    return 35;\n                case \"A\":\n                    return 25;\n                case \"R\":\n                    return 15;\n            }\n        });\n    }\n    sendStateChecked() {\n        // send state checked\n        let sondesChecked = this.sondes.filter((sonde) => sonde.isCheck);\n        let consignePointsChecked = this.consignePoints.filter((consignePoints) => consignePoints.isCheck);\n        let propChecked = [...sondesChecked.map((sonde) => sonde.prop), ...consignePointsChecked.map((consignePoints) => consignePoints.prop)];\n        this.stateChecked.emit(propChecked);\n    }\n    drawChart(d) {\n        this.sendStateChecked();\n        const select = this.svg.selectAll(`#${d.id}`).data([d], s => s.name);\n        if (!d.isCheck) {\n            // la suppression se fait par className qui est unique\n            select.exit().remove();\n            const selectPoints = this.svg.selectAll(`.point-${d.id}`).data([d], p => p.name);\n            selectPoints.exit().remove();\n        }\n        else {\n            if (d.type === 'sonde') {\n                select.enter().append('path')\n                    .attr('class', d.className)\n                    .attr('id', d.id)\n                    .attr('fill', 'none')\n                    .attr('stroke', d => d.color)\n                    .attr('stroke-width', \"1.5px\")\n                    .datum(d => d.data)\n                    .attr('d', d3.line()\n                    .x(d => {\n                    return this.x_scale(d.date);\n                })\n                    .y(d => {\n                    return this.y_scale(d.num);\n                }));\n            }\n            else if (d.type === 'consignePoints') {\n                select.enter().append('path')\n                    .attr('class', d.className)\n                    .attr('id', d.id)\n                    .attr('fill', 'none')\n                    .attr('stroke', d => d.color)\n                    .attr('stroke-width', \"1.5px\")\n                    .datum(d => d.data)\n                    .attr('d', d3.line()\n                    .x(d => {\n                    return this.x_scale(d.date);\n                })\n                    .y(d => {\n                    return this.y_scale(d.num);\n                }).curve(d3.curveStepAfter));\n            }\n        }\n    }\n    drawLine(prop, type, lines, data) {\n        const number = prop.match(/\\d+/);\n        lines = lines.filter(line => line && line.prop && line.prop != prop);\n        let stateProp = this.getColorAndName(data[0].inputId, prop, number, data[0].provider);\n        lines.push({\n            number,\n            name: stateProp.name,\n            color: stateProp.color,\n            isCheck: true,\n            className: 'line',\n            id: prop,\n            prop,\n            type,\n            line: d3.line()\n                .x(d => {\n                return this.x_scale(d.date);\n            })\n                .y(d => {\n                return this.y_scale(d.num);\n            }),\n            data\n        });\n        let sondeIndex = lines.findIndex(line => line && line.prop && line.prop == prop);\n        // console.log('sondeIndex', sondeIndex)\n        this.createLine(lines[sondeIndex]);\n        // console.log('this.sondes', lines)\n        return lines;\n    }\n    createLine(data) {\n        this.svg\n            .append('path')\n            .attr('class', data.className)\n            .attr('id', data.id)\n            .datum(data.data)\n            .attr('fill', 'none')\n            .attr('stroke', data.color)\n            .attr('stroke-width', \"1.5px\")\n            .attr('d', data.line);\n    }\n    drawSensorLine(prop, data) {\n        this.sondes = this.drawLine(prop, 'sonde', this.sondes, data);\n    }\n    drawPointLine(prop, data) {\n        this.consignePoints = this.drawLine(prop, 'consignePoints', this.consignePoints, data);\n    }\n    getColorAndName(inputId, state, number, provider) {\n        let color, name;\n        if (this.statesProp && this.statesProp.length) {\n            let findState = this.statesProp.find((e) => e.inputId === inputId && state === e.state);\n            if (findState) {\n                color = findState.color;\n                name = findState.name;\n            }\n        }\n        if (!name) {\n            if (new RegExp('tempSensor(0?[1-9]|[1-9][0-9])Value').test(state)) {\n                name = this.getSondeName(number, provider);\n            }\n            else if (new RegExp('tempSetpoint(0?[1-9]|[1-9][0-9])').test(state)) {\n                name = 'setPoint ' + number;\n            }\n            else {\n                name = state;\n            }\n        }\n        return { color: color ? color : this.getRandomColor(), name };\n    }\n    setTooltipMultiLine() {\n        let that = this;\n        let res_nested = d3.nest()\n            .key(d => d.key)\n            .entries(this.data);\n        let all = [...this.sondes, ...this.consignePoints];\n        let mouseG = this.svg.append(\"g\")\n            .attr(\"class\", \"mouse-over-effects\");\n        mouseG.append(\"path\") // create vertical line to follow mouse\n            .attr(\"class\", \"mouse-line\")\n            //.style(\"stroke\", \"#A9A9A9\")\n            .style(\"stroke\", \"#2c3e50\")\n            .style(\"stroke-width\", \"1px\")\n            .style(\"height\", \"20px\")\n            .style(\"opacity\", \"0\");\n        let mousePerLine = mouseG.selectAll('.mouse-per-line')\n            .data(res_nested)\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", \"mouse-per-line\");\n        mousePerLine.append(\"circle\")\n            .attr(\"r\", 4)\n            .style(\"stroke\", function (d) {\n            let info = all.find(s => s.prop === d.key);\n            // return d.color\n            return info.color;\n        })\n            .style(\"fill\", \"none\")\n            .style(\"stroke-width\", \"1px\")\n            .style(\"opacity\", \"0\");\n        mouseG.append('svg:rect') // append a rect to catch mouse movements on canvas\n            .attr('width', that.chart_width)\n            .attr('height', that.chart_height)\n            .attr('fill', 'none')\n            .attr('pointer-events', 'all')\n            .on('mouseout', function () {\n            d3.select(`#${that.idChart}`).select(\".mouse-line\")\n                .style(\"opacity\", \"0\");\n            d3.select(`#${that.idChart}`).selectAll(\".mouse-per-line circle\")\n                .style(\"opacity\", \"0\");\n            d3.select(`#${that.idChart}`).selectAll(\".mouse-per-line text\")\n                .style(\"opacity\", \"0\");\n            d3.select(`#${that.idChart}`).selectAll(\"#tooltiptemp\")\n                .style('display', 'none');\n        })\n            .on('mouseover', function () {\n            d3.select(`#${that.idChart}`).select(\".mouse-line\")\n                .style(\"opacity\", \"1\");\n            d3.select(`#${that.idChart}`).selectAll(\".mouse-per-line circle\")\n                //.style(\"opacity\", \"1\");\n                .style(\"opacity\", function (d) {\n                let info = all.find(s => s.prop === d.key);\n                if (info && info.isCheck) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n            d3.select(`#${that.idChart}`).selectAll(\"#tooltiptemp\")\n                .style('display', 'block');\n        })\n            .on('click', function () {\n            // console.log('click res_nested', res_nested)\n            let mouse = d3.mouse(this);\n            let event = {};\n            res_nested.map(d => {\n                let xDate = that.x_scale.invert(mouse[0]);\n                let bisect = d3.bisector(function (d) { return d.date; }).left;\n                let idx = bisect(d.values, xDate);\n                if (d.values[idx]) {\n                    event[d.values[idx].key] = d.values[idx].num;\n                    event['date'] = d.values[idx].date;\n                }\n            });\n            // console.log('click event', event)\n            that.pointClicked.emit(event);\n        })\n            .on('mousemove', function () {\n            let mouse = d3.mouse(this);\n            let xDate = that.x_scale.invert(mouse[0]);\n            let xValue;\n            if (xDate < that.maxTimeTemp) {\n                d3.selectAll(\".mouse-per-line\")\n                    .attr(\"transform\", function (d, i) {\n                    let xDate = that.x_scale.invert(mouse[0]); // use 'invert' to get date corresponding to distance from mouse position relative to svg\n                    let bisect = d3.bisector(function (d) { return d.date; }).left; // retrieve row index of date on parsed csv\n                    let idx = bisect(d.values, xDate);\n                    if (d.values[idx] && d.values[idx].date) {\n                        xValue = that.x_scale(d.values[idx].date);\n                        d3.select(`#${that.idChart}`).select(\".mouse-line\")\n                            .attr(\"d\", function () {\n                            if (d.values[idx] && d.values[idx].date) {\n                                let data = \"M\" + that.x_scale(d.values[idx].date) + \",\" + (7 * that.chart_height + that.margin.bottom / 8);\n                                data += \" \" + that.x_scale(d.values[idx].date) + \",\" + 0;\n                                return data;\n                            }\n                        });\n                        return \"translate(\" + that.x_scale(d.values[idx].date) + \",\" + that.y_scale(d.values[idx].num) + \")\";\n                    }\n                });\n                let sortingObj = [];\n                res_nested.map(d => {\n                    let xDate = that.x_scale.invert(mouse[0]);\n                    let bisect = d3.bisector(function (d) {\n                        if (d.date) {\n                            return d.date;\n                        }\n                    }).left;\n                    let idx = bisect(d.values, xDate);\n                    if (d.values[idx] && d.values[idx].date) {\n                        sortingObj.push({ key: d.values[idx].key, num: d.values[idx].num });\n                    }\n                });\n                sortingObj.sort(function (x, y) {\n                    return d3.descending(x.num, y.num);\n                });\n                let sortingArr = sortingObj.map(d => d.key);\n                let res_nested1 = res_nested.slice().sort(function (a, b) {\n                    return sortingArr.indexOf(a.key) - sortingArr.indexOf(b.key); // rank vehicle category based on price of premium\n                });\n                if (xValue) {\n                    let divSize = document.getElementById(`svg${that.idChart}`).clientWidth;\n                    let divSizeHeight = document.getElementById(`svg${that.idChart}`).clientHeight;\n                    let x = (divSize * xValue / (1000)) + 70;\n                    let y = (divSizeHeight * ((that.chart_height + that.margin.top) / 3) / (that.chart_height + that.margin.top));\n                    if (x + 150 > divSize) {\n                        x = x - 200;\n                    }\n                    let check = false;\n                    d3.select(`#${that.idChart}`).selectAll(\"#tooltiptemp\").html('')\n                        .style('left', x + 'px')\n                        .style('top', y + 'px')\n                        .style('display', 'block')\n                        .selectAll()\n                        .data(res_nested1).enter() // for each vehicle category, list out name and price of premium\n                        .append('div')\n                        .html(d => {\n                        let xDate = that.x_scale.invert(mouse[0]);\n                        let bisect = d3.bisector(function (d) { return d.date; }).left;\n                        let idx = bisect(d.values, xDate);\n                        if (d.values[idx]) {\n                            let info = all.find(s => s.prop === d.key);\n                            let html = '';\n                            if (!check) {\n                                check = true;\n                                html += `${d.values[idx].date.toLocaleString(\"fr-FR\")}<br/>`;\n                            }\n                            if (info && info.isCheck) {\n                                html += `${info.name} : <span style=\"color:${info.color};\">${d.values[idx].num} °C</span>`;\n                            }\n                            else {\n                                html += '';\n                            }\n                            return html;\n                        }\n                    });\n                }\n            }\n        });\n    }\n    initD3() {\n        this.x_scale = d3.scaleTime()\n            .domain([\n            this.display_start,\n            this.display_end\n        ])\n            .range([0, this.chart_width - 0]);\n        this.y_scale = d3.scaleLinear()\n            .domain([\n            d3.min(this.data, d => {\n                return Number(d.num);\n            }),\n            d3.max(this.data, d => {\n                return Number(d.num);\n            })\n        ])\n            .range([this.chart_height, 0]);\n        let tooltip = d3.select(`#${this.idChart}`).append(\"div\")\n            .attr('id', 'tooltiptemp');\n        this.svg = d3.select(`#${this.idChart}`)\n            .append(\"svg\")\n            // responsive\n            .attr('preserveAspectRadio', 'xMidYMid')\n            .attr(\"id\", `svg${this.idChart}`)\n            .attr(\"viewBox\", `0 0 1000 300`)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n        // Create Axes\n        this.x_axis = d3.axisBottom(this.x_scale)\n            .ticks(4)\n            .tickFormat(this.time_format);\n        this.y_axis = d3.axisLeft(this.y_scale)\n            .ticks(8)\n            .tickFormat(d => d + ' °C');\n        this.svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + (this.chart_height) + \")\")\n            .call(this.x_axis);\n        this.svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + 0 + \",0)\")\n            .call(this.y_axis);\n        // legend\n        this.userInput = d3.select(`#${this.idChart}`)\n            .append('div')\n            .attr('class', 'userInput')\n            .style('display', 'flex')\n            .style('justify-content', 'center')\n            .style('flex-wrap', 'wrap')\n            .style('padding-left', '20px');\n    }\n    getRandomColor() {\n        let randomColor = ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#f1c40f', '#e67e22', '#e74c3c', '#95a5a6'];\n        // filter color already used\n        randomColor = randomColor.filter(color => !this.statesProp.some(state => state && state.color && state.color.toLowerCase() == color) &&\n            !this.sondes.some(sonde => sonde && sonde.color && sonde.color.toLowerCase() == color) &&\n            !this.consignePoints.some(consignePoint => consignePoint && consignePoint.color && consignePoint.color.toLowerCase() == color));\n        // console.log('randomColor', randomColor)\n        return randomColor[Math.floor(Math.random() * (randomColor.length))];\n    }\n    getSondeName(sondeNumber, provider) {\n        if (this.sondeName && this.sondeName[sondeNumber]) {\n            return this.sondeName[sondeNumber];\n        }\n        else {\n            let findEv;\n            if (this.events[provider].events && this.events[provider].events.length) {\n                findEv = this.events[provider].events.find(event => event[`tempSensor${sondeNumber}Name`]);\n            }\n            if (findEv) {\n                this.sondeName[sondeNumber] = findEv[`tempSensor${sondeNumber}Name`]; // + ` (${sondeNumber})`\n                return this.sondeName[sondeNumber];\n            }\n            else {\n                return 'Sonde n°' + sondeNumber;\n            }\n        }\n    }\n    minMax(array) {\n        let minMaxArray = array.reduce(function (r, b) {\n            let n = b.num;\n            r[0] = (!r[0]) ? n : Math.min(r[0], n);\n            r[1] = (!r[1]) ? n : Math.max(r[1], n);\n            return r;\n        }, []);\n        return minMaxArray;\n    }\n    render() {\n        return (h(\"div\", { class: \"s3pTemperatureDiv\" },\n            h(\"div\", { id: this.idChart, class: 'chartD3' }),\n            h(\"div\", null)));\n    }\n    static get is() { return \"s3p-temperature\"; }\n    static get originalStyleUrls() { return {\n        \"$\": [\"temperature.css\"]\n    }; }\n    static get styleUrls() { return {\n        \"$\": [\"temperature.css\"]\n    }; }\n    static get properties() { return {\n        \"idChart\": {\n            \"type\": \"string\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"attribute\": \"id-chart\",\n            \"reflect\": false,\n            \"defaultValue\": \"'chart'\"\n        },\n        \"events\": {\n            \"type\": \"any\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"attribute\": \"events\",\n            \"reflect\": false,\n            \"defaultValue\": \"[]\"\n        },\n        \"eventsTimeline\": {\n            \"type\": \"any\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"attribute\": \"events-timeline\",\n            \"reflect\": false\n        },\n        \"lastEvent_end\": {\n            \"type\": \"unknown\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"Date\",\n                \"resolved\": \"Date\",\n                \"references\": {\n                    \"Date\": {\n                        \"location\": \"global\"\n                    }\n                }\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            }\n        },\n        \"statesGroups\": {\n            \"type\": \"any\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"attribute\": \"states-groups\",\n            \"reflect\": false\n        },\n        \"display_start\": {\n            \"type\": \"unknown\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"Date\",\n                \"resolved\": \"Date\",\n                \"references\": {\n                    \"Date\": {\n                        \"location\": \"global\"\n                    }\n                }\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            }\n        },\n        \"display_end\": {\n            \"type\": \"unknown\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"Date\",\n                \"resolved\": \"Date\",\n                \"references\": {\n                    \"Date\": {\n                        \"location\": \"global\"\n                    }\n                }\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            }\n        }\n    }; }\n    static get states() { return {\n        \"statesProp\": {}\n    }; }\n    static get events() { return [{\n            \"method\": \"pointClicked\",\n            \"name\": \"pointClicked\",\n            \"bubbles\": true,\n            \"cancelable\": true,\n            \"composed\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            }\n        }, {\n            \"method\": \"stateChecked\",\n            \"name\": \"stateChecked\",\n            \"bubbles\": true,\n            \"cancelable\": true,\n            \"composed\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            }\n        }]; }\n    static get elementRef() { return \"el\"; }\n    static get watchers() { return [{\n            \"propName\": \"events\",\n            \"methodName\": \"setEvents\"\n        }]; }\n}\n"],"mappings":"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"}