{"version":3,"names":["locales","fetchLocaleStrings","url","componentName","locale","Promise","resolve","reject","Object","assign","fetch","then","async","result","ok","json","getComponentClosestLanguage","element","closestElement","closest","lang","i18n","constructor","this","strings","tagName","toLowerCase","get","string","params","r","length","index","replace","error"],"sources":["./src/utils/i18n.ts"],"sourcesContent":["var locales = {};\n\ndeclare let resourcesUrl;\n\nfunction fetchLocaleStrings(url: string, componentName: string, locale: string): Promise<any> {\n  //console.log('call fetch with', componentName, locale)\n\n  return new Promise((resolve, reject): void => {\n    if (locales[locale]) {\n      resolve({\n        ...locales[locale]['common'],\n        ...locales[locale][componentName],\n      });\n    } else {\n      fetch(`${url}json/${locale}.json`).then(\n        async result => {\n          if (result.ok) {\n            locales[locale] = await result.json();\n\n            //console.log('receive', locales[locale])\n            resolve({\n              ...locales[locale]['common'],\n              ...locales[locale][componentName],\n            });\n          } else reject();\n        },\n        () => reject(),\n      );\n    }\n  });\n}\n\nfunction getComponentClosestLanguage(element: HTMLElement): string {\n  let closestElement = element.closest('[lang]') as HTMLElement;\n  return closestElement ? closestElement.lang : 'fr';\n}\n\nexport class i18n {\n  element;\n  strings;\n  locale;\n\n  constructor(element: HTMLElement) {\n    this.element = element;\n  }\n\n  async load(url, locale) {\n    // console.log(url)\n    if (locale) {\n      this.locale = locale;\n    } else {\n      this.locale = getComponentClosestLanguage(this.element);\n    }\n\n    this.strings = await fetchLocaleStrings(url, this.element.tagName.toLowerCase(), this.locale);\n\n    //console.log('i18n []'+JSON.stringify(this.strings))\n  }\n\n  get(string, ...params) {\n    // console.log('try to i18n ' + string, params)\n\n    try {\n      let r = this.strings[string];\n\n      if (typeof r === 'string') {\n        if (params && params.length > 0) {\n          for (let index in params) {\n            //  console.log('replace index', index, params[index])\n\n            r = r.replace(`{{${index}}}`, params[index]);\n          }\n        }\n\n        return r;\n      } else {\n        return '?..?';\n      }\n    } catch (error) {\n      // console.error(error)\n      return '?**?';\n    }\n  }\n}\n"],"mappings":"AAAA,IAAIA,EAAU,GAId,SAASC,EAAmBC,EAAaC,EAAuBC,GAG9D,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,GAAIP,EAAQI,GAAS,CACnBE,EAAOE,OAAAC,OAAAD,OAAAC,OAAA,GACFT,EAAQI,GAAQ,WAChBJ,EAAQI,GAAQD,I,KAEhB,CACLO,MAAM,GAAGR,SAAWE,UAAeO,MACjCC,MAAMC,IACJ,GAAIA,EAAOC,GAAI,CACbd,EAAQI,SAAgBS,EAAOE,OAG/BT,EAAOE,OAAAC,OAAAD,OAAAC,OAAA,GACFT,EAAQI,GAAQ,WAChBJ,EAAQI,GAAQD,I,MAEhBI,GAAQ,IAEjB,IAAMA,K,IAId,CAEA,SAASS,EAA4BC,GACnC,IAAIC,EAAiBD,EAAQE,QAAQ,UACrC,OAAOD,EAAiBA,EAAeE,KAAO,IAChD,C,MAEaC,EAKXC,YAAYL,GACVM,KAAKN,QAAUA,C,CAGjBL,WAAWV,EAAKE,GAEd,GAAIA,EAAQ,CACVmB,KAAKnB,OAASA,C,KACT,CACLmB,KAAKnB,OAASY,EAA4BO,KAAKN,Q,CAGjDM,KAAKC,cAAgBvB,EAAmBC,EAAKqB,KAAKN,QAAQQ,QAAQC,cAAeH,KAAKnB,O,CAKxFuB,IAAIC,KAAWC,GAGb,IACE,IAAIC,EAAIP,KAAKC,QAAQI,GAErB,UAAWE,IAAM,SAAU,CACzB,GAAID,GAAUA,EAAOE,OAAS,EAAG,CAC/B,IAAK,IAAIC,KAASH,EAAQ,CAGxBC,EAAIA,EAAEG,QAAQ,KAAKD,MAAWH,EAAOG,G,EAIzC,OAAOF,C,KACF,CACL,MAAO,M,EAET,MAAOI,GAEP,MAAO,M"}