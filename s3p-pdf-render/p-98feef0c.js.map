{"version":3,"names":["prettyDate","date","format","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","secondes","getSeconds","monthFr","toHHMMSS","sec_num","Math","floor","seconds","toShortHHMM","toShortHHMMSS","addMinute","getTime","removeMinute","addHours","removeHours","separateHundredWithSpace","x","toString","replace"],"sources":["./node_modules/@s3pweb/s3p-chart/dist/collection/utils/utils.js"],"sourcesContent":["/**\n * permettre afficher les dates dans different format\n *\n * @param date\n * @param format string ->  (00/00/0000 00:00, 0000-00-00, 00:00, 00 month)\n */\nexport function prettyDate(date, format) {\n    date = new Date(date);\n    let day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n    let month = date.getMonth() + 1 < 10\n        ? \"0\" + (date.getMonth() + 1)\n        : date.getMonth() + 1;\n    let year = date.getFullYear();\n    let hours = date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\n    let minutes = date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n    let secondes = date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n    if (format === \"00/00/0000 00:00\") {\n        return `${day}/${month}/${year} ${hours}:${minutes}`;\n    }\n    else if (format === \"00/00/0000 00:00:00\") {\n        return `${day}/${month} ${hours}:${minutes}:${secondes}`;\n    }\n    else if (format === \"00/00 00:00\") {\n        return `${day}/${month} ${hours}:${minutes}`;\n    }\n    else if (format === \"0000-00-00\") {\n        return `${year}-${month}-${day}`;\n    }\n    else if (format === \"00:00\") {\n        return `${hours}:${minutes}`;\n    }\n    else if (format === '00 month') {\n        return `${day} ${monthFr(month)}`;\n    }\n}\n/**\n * Renvoi le mois en français\n * @param month string : mois  (01,02,...)\n */\nfunction monthFr(month) {\n    switch (month) {\n        case '01':\n            return \"Janvier\";\n        case '02':\n            return \"Février\";\n        case '03':\n            return \"Mars\";\n        case '04':\n            return \"Avril\";\n        case '05':\n            return \"Mai\";\n        case '06':\n            return \"Juin\";\n        case '07':\n            return \"Juillet\";\n        case '08':\n            return \"Août\";\n        case '09':\n            return \"Septembre\";\n        case '10':\n            return \"Octobre\";\n        case '11':\n            return \"Novembre\";\n        case '12':\n            return \"Décembre\";\n    }\n}\n/**\n * Permettre d'afficher une durée dans le format : 00h00m00s\n * @param sec_num  durée en SECONDE\n */\nexport function toHHMMSS(sec_num, format = '00h00m00s') {\n    let hours = Math.floor(sec_num / 3600);\n    let minutes = Math.floor((sec_num - hours * 3600) / 60);\n    let seconds = Math.floor(sec_num - hours * 3600 - minutes * 60);\n    if (hours < 10) {\n        hours = \"0\" + hours;\n    }\n    if (minutes < 10) {\n        minutes = \"0\" + minutes;\n    }\n    if (seconds < 10) {\n        seconds = \"0\" + seconds;\n    }\n    if (format === '00h00m00s') {\n        return hours + \"h \" + minutes + \"m \" + seconds + \"s\";\n    }\n    else if (format === \"00:00:00\") {\n        return hours + \":\" + minutes + \":\" + seconds;\n    }\n    else if (format === \"00h00\") {\n        return hours + \"h \" + minutes + \"m\";\n    }\n    else if (format === \"00h00min\") {\n        return (hours == \"00\" ? '' : hours + \"h \") + (minutes == \"00\" ? '' : minutes + \" min\");\n        ;\n    }\n    else if (format === \"hours\") {\n        return hours;\n    }\n    else if (format === \"minutes\") {\n        return minutes;\n    }\n}\nexport function toShortHHMM(sec_num) {\n    let hours = Math.floor(sec_num / 3600);\n    let minutes = Math.floor((sec_num - hours * 3600) / 60);\n    if (hours < 10) {\n        hours = \"0\" + hours;\n    }\n    if (minutes < 10) {\n        minutes = \"0\" + minutes;\n    }\n    return (hours == \"00\" ? '' : hours + \"h\") + (minutes == \"00\" ? '' : minutes + \"m\");\n}\nexport function toShortHHMMSS(sec_num) {\n    let hours = Math.floor(sec_num / 3600);\n    let minutes = Math.floor((sec_num - hours * 3600) / 60);\n    let seconds = Math.floor(sec_num - hours * 3600 - minutes * 60);\n    if (hours < 10) {\n        hours = \"0\" + hours;\n    }\n    if (minutes < 10) {\n        minutes = \"0\" + minutes;\n    }\n    return (hours == \"00\" ? '' : hours + \"h\") + (minutes == \"00\" ? '' : minutes + \"m\") + (seconds == \"00\" ? '' : seconds + \"s\");\n}\nexport function addMinute(date, minutes) {\n    return new Date(date.getTime() + minutes * 60000);\n}\nexport function removeMinute(date, minutes) {\n    return new Date(date.getTime() - minutes * 60000);\n}\nexport function addHours(date, hours) {\n    return new Date(date.getTime() + hours * 3600000);\n}\nexport function removeHours(date, hours) {\n    return new Date(date.getTime() - hours * 3600000);\n}\nexport function separateHundredWithSpace(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n}\n"],"mappings":"AAMO,SAASA,EAAWC,EAAMC,GAC7BD,EAAO,IAAIE,KAAKF,GAChB,IAAIG,EAAMH,EAAKI,UAAY,GAAK,IAAMJ,EAAKI,UAAYJ,EAAKI,UAC5D,IAAIC,EAAQL,EAAKM,WAAa,EAAI,GAC5B,KAAON,EAAKM,WAAa,GACzBN,EAAKM,WAAa,EACxB,IAAIC,EAAOP,EAAKQ,cAChB,IAAIC,EAAQT,EAAKU,WAAa,GAAK,IAAMV,EAAKU,WAAaV,EAAKU,WAChE,IAAIC,EAAUX,EAAKY,aAAe,GAAK,IAAMZ,EAAKY,aAAeZ,EAAKY,aACtE,IAAIC,EAAWb,EAAKc,aAAe,GAAK,IAAMd,EAAKc,aAAed,EAAKc,aACvE,GAAIb,IAAW,mBAAoB,CAC/B,MAAO,GAAGE,KAAOE,KAASE,KAAQE,KAASE,GACnD,MACS,GAAIV,IAAW,sBAAuB,CACvC,MAAO,GAAGE,KAAOE,KAASI,KAASE,KAAWE,GACtD,MACS,GAAIZ,IAAW,cAAe,CAC/B,MAAO,GAAGE,KAAOE,KAASI,KAASE,GAC3C,MACS,GAAIV,IAAW,aAAc,CAC9B,MAAO,GAAGM,KAAQF,KAASF,GACnC,MACS,GAAIF,IAAW,QAAS,CACzB,MAAO,GAAGQ,KAASE,GAC3B,MACS,GAAIV,IAAW,WAAY,CAC5B,MAAO,GAAGE,KAAOY,EAAQV,IACjC,CACA,CAKA,SAASU,EAAQV,GACb,OAAQA,GACJ,IAAK,KACD,MAAO,UACX,IAAK,KACD,MAAO,UACX,IAAK,KACD,MAAO,OACX,IAAK,KACD,MAAO,QACX,IAAK,KACD,MAAO,MACX,IAAK,KACD,MAAO,OACX,IAAK,KACD,MAAO,UACX,IAAK,KACD,MAAO,OACX,IAAK,KACD,MAAO,YACX,IAAK,KACD,MAAO,UACX,IAAK,KACD,MAAO,WACX,IAAK,KACD,MAAO,WAEnB,CAKO,SAASW,EAASC,EAAShB,EAAS,aACvC,IAAIQ,EAAQS,KAAKC,MAAMF,EAAU,MACjC,IAAIN,EAAUO,KAAKC,OAAOF,EAAUR,EAAQ,MAAQ,IACpD,IAAIW,EAAUF,KAAKC,MAAMF,EAAUR,EAAQ,KAAOE,EAAU,IAC5D,GAAIF,EAAQ,GAAI,CACZA,EAAQ,IAAMA,CACtB,CACI,GAAIE,EAAU,GAAI,CACdA,EAAU,IAAMA,CACxB,CACI,GAAIS,EAAU,GAAI,CACdA,EAAU,IAAMA,CACxB,CACI,GAAInB,IAAW,YAAa,CACxB,OAAOQ,EAAQ,KAAOE,EAAU,KAAOS,EAAU,GACzD,MACS,GAAInB,IAAW,WAAY,CAC5B,OAAOQ,EAAQ,IAAME,EAAU,IAAMS,CAC7C,MACS,GAAInB,IAAW,QAAS,CACzB,OAAOQ,EAAQ,KAAOE,EAAU,GACxC,MACS,GAAIV,IAAW,WAAY,CAC5B,OAAQQ,GAAS,KAAO,GAAKA,EAAQ,OAASE,GAAW,KAAO,GAAKA,EAAU,OAEvF,MACS,GAAIV,IAAW,QAAS,CACzB,OAAOQ,CACf,MACS,GAAIR,IAAW,UAAW,CAC3B,OAAOU,CACf,CACA,CACO,SAASU,EAAYJ,GACxB,IAAIR,EAAQS,KAAKC,MAAMF,EAAU,MACjC,IAAIN,EAAUO,KAAKC,OAAOF,EAAUR,EAAQ,MAAQ,IACpD,GAAIA,EAAQ,GAAI,CACZA,EAAQ,IAAMA,CACtB,CACI,GAAIE,EAAU,GAAI,CACdA,EAAU,IAAMA,CACxB,CACI,OAAQF,GAAS,KAAO,GAAKA,EAAQ,MAAQE,GAAW,KAAO,GAAKA,EAAU,IAClF,CACO,SAASW,EAAcL,GAC1B,IAAIR,EAAQS,KAAKC,MAAMF,EAAU,MACjC,IAAIN,EAAUO,KAAKC,OAAOF,EAAUR,EAAQ,MAAQ,IACpD,IAAIW,EAAUF,KAAKC,MAAMF,EAAUR,EAAQ,KAAOE,EAAU,IAC5D,GAAIF,EAAQ,GAAI,CACZA,EAAQ,IAAMA,CACtB,CACI,GAAIE,EAAU,GAAI,CACdA,EAAU,IAAMA,CACxB,CACI,OAAQF,GAAS,KAAO,GAAKA,EAAQ,MAAQE,GAAW,KAAO,GAAKA,EAAU,MAAQS,GAAW,KAAO,GAAKA,EAAU,IAC3H,CACO,SAASG,EAAUvB,EAAMW,GAC5B,OAAO,IAAIT,KAAKF,EAAKwB,UAAYb,EAAU,IAC/C,CACO,SAASc,EAAazB,EAAMW,GAC/B,OAAO,IAAIT,KAAKF,EAAKwB,UAAYb,EAAU,IAC/C,CACO,SAASe,EAAS1B,EAAMS,GAC3B,OAAO,IAAIP,KAAKF,EAAKwB,UAAYf,EAAQ,KAC7C,CACO,SAASkB,EAAY3B,EAAMS,GAC9B,OAAO,IAAIP,KAAKF,EAAKwB,UAAYf,EAAQ,KAC7C,CACO,SAASmB,EAAyBC,GACrC,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,IACzD,Q"}