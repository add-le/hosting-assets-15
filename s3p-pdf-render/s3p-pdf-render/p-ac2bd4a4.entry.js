import{r as t,d as i,h as l,a as s}from"./p-d5a6e412.js";import{i as h}from"./p-38533d3c.js";import{p as n,r as d}from"./p-4d1c1db0.js";const e='html{-webkit-print-color-adjust:exact}body{margin:0;background-color:white}main{margin:10px 10px 10px 10px;font-size:11px}.report{font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif}header{display:flex;align-items:center;padding:10px 10px 10px 10px;font-weight:bold;box-shadow:0 2px 5px 0 rgba(0, 0, 0, 0.26);margin-bottom:10px}header p{margin:5px 0}table{width:100%;font-size:11px;margin-top:20px}table,th,td{border:0.1px solid white}th,td{padding:1px;text-align:center}th{text-transform:uppercase;background:rgba(var(--primary-color-rgba, 249, 190, 31), 0.6);width:100px}tr{background:rgb(255, 240, 172, 0.2)}td{text-transform:capitalize}.week{background:rgb(255, 240, 172)}.month{background:rgba(var(--primary-color-rgba, 249, 190, 31), 0.6)}#totalPeriod{background:#f1f1f1}.text-center{text-align:center}.info-driver{margin:auto}';const r=class{constructor(i){t(this,i);this.driverName=undefined;this.driverCard=undefined;this.start=undefined;this.end=undefined;this.expenses=undefined}async componentWillLoad(){this.i18n=new h(this.element);await this.i18n.load(i("../"))}render(){return l("div",{class:"report"},l("header",null,l("img",{class:"logo",src:"https://app.mapandtruck.io/assets/mapandtruck/logo_maptrcuk.png",height:"40",alt:"s3pweb"}),l("div",{class:"info-driver"},l("p",null,"Conducteur: ",this.driverName.toUpperCase()," "),l("p",null,"N° Carte: ",this.driverCard," ")),l("div",{class:"info-driver"},l("p",null,"Détails des frais"),l("p",null,"Période du ",n(this.start,true)," au ",n(this.end,true)))),l("main",null,this.expenses&&this.expenses.month&&Object.keys(this.expenses.month).map(((t,i)=>l("table",null,l("thead",null,l("tr",null,l("th",null),l("th",{colSpan:2},"Unique"),l("th",{colSpan:2},"Matin"),l("th",{colSpan:2},"Midi"),l("th",{colSpan:2},"Soir"),l("th",{colSpan:2},"Nuit"),l("th",null,"Total"),l("th",{colSpan:2},"Prime"))),l("tbody",null,Object.keys(this.expenses.month[t].week).map((i=>[Object.keys(this.expenses.month[t].week[i].day).map((s=>l("tr",null,l("td",null,new Date(s).toLocaleString("fr-Fr",{weekday:"short"})+" "+n(new Date(s),true)),l("td",null,this.expenses.month[t].week[i].day[s].unique?this.expenses.month[t].week[i].day[s].unique.count:""),l("td",null,this.expenses.month[t].week[i].day[s].unique?d(this.expenses.month[t].week[i].day[s].unique.amount,2):""),l("td",null,this.expenses.month[t].week[i].day[s].morning?this.expenses.month[t].week[i].day[s].morning.count:""),l("td",null,this.expenses.month[t].week[i].day[s].morning?d(this.expenses.month[t].week[i].day[s].morning.amount,2):""),l("td",null,this.expenses.month[t].week[i].day[s].lunchTime?this.expenses.month[t].week[i].day[s].lunchTime.count:""),l("td",null,this.expenses.month[t].week[i].day[s].lunchTime?d(this.expenses.month[t].week[i].day[s].lunchTime.amount,2):""),l("td",null,this.expenses.month[t].week[i].day[s].evening?this.expenses.month[t].week[i].day[s].evening.count:""),l("td",null,this.expenses.month[t].week[i].day[s].evening?d(this.expenses.month[t].week[i].day[s].evening.amount,2):""),l("td",null,this.expenses.month[t].week[i].day[s].night?this.expenses.month[t].week[i].day[s].night.count:""),l("td",null,this.expenses.month[t].week[i].day[s].night?d(this.expenses.month[t].week[i].day[s].night.amount,2):""),l("td",null,d(this.expenses.month[t].week[i].day[s].totals,2)),l("td",null,this.expenses.month[t].week[i].day[s].bonus?this.expenses.month[t].week[i].day[s].bonus.count:""),l("td",null,this.expenses.month[t].week[i].day[s].bonus?d(this.expenses.month[t].week[i].day[s].bonus.amount,2):"")))),l("tr",{class:"week"},l("td",null,"Semaine ",i),l("td",null,this.expenses.month[t].week[i].unique?this.expenses.month[t].week[i].unique.count:""),l("td",null,this.expenses.month[t].week[i].unique?d(this.expenses.month[t].week[i].unique.amount,2):""),l("td",null,this.expenses.month[t].week[i].morning?this.expenses.month[t].week[i].morning.count:""),l("td",null,this.expenses.month[t].week[i].morning?d(this.expenses.month[t].week[i].morning.amount,2):""),l("td",null,this.expenses.month[t].week[i].lunchTime?this.expenses.month[t].week[i].lunchTime.count:""),l("td",null,this.expenses.month[t].week[i].lunchTime?d(this.expenses.month[t].week[i].lunchTime.amount,2):""),l("td",null,this.expenses.month[t].week[i].evening?this.expenses.month[t].week[i].evening.count:""),l("td",null,this.expenses.month[t].week[i].evening?d(this.expenses.month[t].week[i].evening.amount,2):""),l("td",null,this.expenses.month[t].week[i].night?this.expenses.month[t].week[i].night.count:""),l("td",null,this.expenses.month[t].week[i].night?d(this.expenses.month[t].week[i].night.amount,2):""),l("td",null,d(this.expenses.month[t].week[i].totals,2)),l("td",null,this.expenses.month[t].week[i].bonus?this.expenses.month[t].week[i].bonus.count:""),l("td",null,this.expenses.month[t].week[i].bonus?d(this.expenses.month[t].week[i].bonus.amount,2):""))])),l("tr",{class:"month"},l("td",null,new Date(t).toLocaleString("fr-Fr",{month:"long",year:"numeric"})),l("td",null,this.expenses.month[t].unique?this.expenses.month[t].unique.count:""),l("td",null,this.expenses.month[t].unique?d(this.expenses.month[t].unique.amount,2):""),l("td",null,this.expenses.month[t].morning?this.expenses.month[t].morning.count:""),l("td",null,this.expenses.month[t].morning?d(this.expenses.month[t].morning.amount,2):""),l("td",null,this.expenses.month[t].lunchTime?this.expenses.month[t].lunchTime.count:""),l("td",null,this.expenses.month[t].lunchTime?d(this.expenses.month[t].lunchTime.amount,2):""),l("td",null,this.expenses.month[t].evening?this.expenses.month[t].evening.count:""),l("td",null,this.expenses.month[t].evening?d(this.expenses.month[t].evening.amount,2):""),l("td",null,this.expenses.month[t].night?this.expenses.month[t].night.count:""),l("td",null,this.expenses.month[t].night?d(this.expenses.month[t].night.amount,2):""),l("td",null,d(this.expenses.month[t].totals,2)),l("td",null,this.expenses.month[t].bonus?this.expenses.month[t].bonus.count:""),l("td",null,this.expenses.month[t].bonus?d(this.expenses.month[t].bonus.amount,2):"")),i===Object.keys(this.expenses.month).length-1?l("tr",{id:"totalPeriod"},l("td",null,"Période"),l("td",null,this.expenses.unique?this.expenses.unique.count:""),l("td",null,this.expenses.unique?d(this.expenses.unique.amount,2):""),l("td",null,this.expenses.morning?this.expenses.morning.count:""),l("td",null,this.expenses.morning?d(this.expenses.morning.amount,2):""),l("td",null,this.expenses.lunchTime?this.expenses.lunchTime.count:""),l("td",null,this.expenses.lunchTime?d(this.expenses.lunchTime.amount,2):""),l("td",null,this.expenses.evening?this.expenses.evening.count:""),l("td",null,this.expenses.evening?d(this.expenses.evening.amount,2):""),l("td",null,this.expenses.night?this.expenses.night.count:""),l("td",null,this.expenses.night?d(this.expenses.night.amount,2):""),l("td",null,d(this.expenses.totals,2)),l("td",null,this.expenses.bonus?this.expenses.bonus.count:""),l("td",null,this.expenses.bonus?d(this.expenses.bonus.amount,2):"")):""))))))}get element(){return s(this)}};r.style=e;export{r as s3p_expenses_report};
//# sourceMappingURL=p-ac2bd4a4.entry.js.map