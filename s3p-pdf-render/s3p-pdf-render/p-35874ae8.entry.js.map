{"version":3,"names":["replaceActivity","eventsEdited","index","findIndex","event","Date","ts","valueOf","this","eventSelect","activity","activityEdit","eventsModified","type","preIndex","lastEvent","nextIndex","end","modified","eventSelectEdited","start","setActivityEdit","ev","value","setEventEdited","timelineEditedElement","updatePeriodAndEvent","editStartActivity","filter","startEdit","length","toISOString","push","newEvent","Object","assign","sort","a","b","setStartEdit","detail","setHaveError","editEndActivity","eventselect","find","endEdit","setEndEdit","addActivity","actionType","correction","customActivityAdd","events","initActivityAdd","customActivityId","activityAddEdit","setCustomActivityAdd","setLimitToAddCustomActivity","editorTimelineCss","EditorTimeline","constructor","hostRef","removeHours","addMinute","removeMinute","addHours","validateCorrectionsMessage","showWarningMessage","activitiesOutsideVehicle","tab","blockEdition","haveError","async","log","debug","i18n","el","load","resourcesUrl","maxStartFutur","startActivity","max","min","endActivity","map","x","display_start","display_end","invalidCorrection","comment","new","setTimeout","toValidate","onChangeStartAndEndHandler","firstLoad","updateStartAndEnd","timelineElement","changeTab","getPossibleActivities","possibleActivities","currentActivity","setStartAndEndDisplay","padding","setComment","target","sendCorrection","dataSend","origin","source","correctionId","_id","eventModified","tooltip","eventOrigin","provider","sendTimelineCorrection","emit","correctionIdToDelete","isDisabledForm","includes","refresh","inputDateTimeStart","date","setError","inputDateTimeEnd","renderReplaceMode","h","class","get","name","onInput","selected","onClick","center","renderStartEditMode","idInput","dateMax","dateMin","onDateTimeChange","ref","renderEndEditMode","renderAddMode","pastLimit","onSendEventsAdd","setTab","mode","tabs","icon","displayName","display","disabled","styleGraphic","onChangeTabEvent","slot","error","renderErrorMessage","prettyDate","render","stack","lastEvent_end","onStartAndEndChange"],"sources":["./node_modules/@s3pweb/s3p-chart/dist/collection/components/corrections/editor-timeline/replace/replaceActivity.js","./node_modules/@s3pweb/s3p-chart/dist/collection/components/corrections/editor-timeline/edit/editor-timeline.editStartActivity.js","./node_modules/@s3pweb/s3p-chart/dist/collection/components/corrections/editor-timeline/edit/editor-timeline.editEndActivity.js","./node_modules/@s3pweb/s3p-chart/dist/collection/components/corrections/editor-timeline/add/editor-timeline.addActivity.js","./node_modules/@s3pweb/s3p-chart/dist/collection/components/corrections/editor-timeline/editor-timeline.css?tag=s3p-editor-timeline","./node_modules/@s3pweb/s3p-chart/dist/collection/components/corrections/editor-timeline/editor-timeline.js"],"sourcesContent":["/**\n*  Replace activity by new activity\n* @param eventsEdited\n*/\nexport function replaceActivity(eventsEdited) {\n    // research event select in eventEdited and replace activity by new activity\n    let index = eventsEdited.findIndex(event => new Date(event.ts).valueOf() === new Date(this.eventSelect.event.ts).valueOf() && event.activity);\n    eventsEdited[index].activity = this.activityEdit;\n    this.eventsModified = [{ type: \"edit\", event: eventsEdited[index] }];\n    // research previous activity\n    let preIndex = index - 1, lastEvent;\n    while (eventsEdited[preIndex] && (!eventsEdited[preIndex].activity || eventsEdited[preIndex].activity === this.activityEdit)) {\n        if (eventsEdited[preIndex].activity === this.activityEdit) {\n            lastEvent = eventsEdited[preIndex];\n        }\n        preIndex = preIndex - 1;\n    }\n    // research next activity\n    let nextIndex = index + 1;\n    while (eventsEdited[nextIndex] && (!eventsEdited[nextIndex].activity || eventsEdited[nextIndex].activity === this.activityEdit)) {\n        nextIndex = nextIndex + 1;\n    }\n    const end = eventsEdited[nextIndex] ? eventsEdited[nextIndex].ts : this.lastEvent;\n    // add status modified\n    if (preIndex && eventsEdited[preIndex] && lastEvent) {\n        lastEvent.modified = true;\n        this.eventSelectEdited = { start: new Date(lastEvent.ts), end: new Date(end) };\n    }\n    else {\n        eventsEdited[index].modified = true;\n        this.eventSelectEdited = { start: new Date(eventsEdited[index].ts), end: new Date(end) };\n    }\n    return eventsEdited;\n}\n/**\n * set activity to replace current activity\n * @param ev\n */\nexport function setActivityEdit(ev) {\n    this.activityEdit = ev.value;\n    this.eventsEdited = this.setEventEdited();\n    this.timelineEditedElement.updatePeriodAndEvent(this.eventsEdited, [], this.lastEvent);\n}\n","/**\n * Edit start of event select\n * @param eventsEdited\n */\nfunction editStartActivity(eventsEdited) {\n    this.eventsModified = [];\n    //filter events that is betwenn new start and actuel end (keeping event selected)\n    eventsEdited = eventsEdited.filter((event) => {\n        return new Date(event.ts) < new Date(this.startEdit) || new Date(event.ts) >= new Date(this.eventSelect.end) || new Date(event.ts).valueOf() === new Date(this.eventSelect.event.ts).valueOf();\n    });\n    for (let index = 0; index < eventsEdited.length; index++) {\n        const event = eventsEdited[index];\n        // change ts of event select by new start\n        if (new Date(event.ts).valueOf() === new Date(this.eventSelect.event.ts).valueOf() && event.activity) {\n            event.ts = new Date(this.startEdit).toISOString();\n            // event select modified true\n            event.modified = true;\n            this.eventsModified.push({ type: \"edit\", event: event });\n        }\n    }\n    // if the new start is more recent that last start\n    if (new Date(this.eventSelect.event.ts) < this.startEdit) {\n        // add event with Rest activity\n        const newEvent = Object.assign({}, this.eventSelect.event, { activity: \"R\", modified: true });\n        eventsEdited.push(newEvent);\n        this.eventsModified.push({ type: \"create\", event: newEvent });\n        eventsEdited = eventsEdited.sort((a, b) => +new Date(a.ts) - +new Date(b.ts));\n    }\n    return eventsEdited;\n}\n/**\n * Set start edit then update eventsEdited and timeline edited\n * @param ev\n */\nfunction setStartEdit(ev) {\n    if (ev.detail) {\n        this.startEdit = ev.detail;\n        this.eventsEdited = this.setEventEdited();\n        this.timelineEditedElement.updatePeriodAndEvent(this.eventsEdited, [], this.lastEvent);\n        this.setHaveError(false);\n    }\n    else {\n        this.setHaveError(true);\n    }\n}\nexport { editStartActivity, setStartEdit };\n","/**\n * Edit end of event select\n * @param eventsEdited\n */\nexport function editEndActivity(eventsEdited) {\n    // add modified true to event select\n    let eventselect = eventsEdited.find(event => new Date(event.ts).valueOf() === new Date(this.eventSelect.event.ts).valueOf());\n    if (eventselect) {\n        eventselect.modified = true;\n    }\n    // add event with Rest activity\n    const newEvent = Object.assign({}, this.eventSelect.event, { activity: \"R\", ts: new Date(this.endEdit).toISOString(), modified: true });\n    eventsEdited.push(newEvent);\n    this.eventsModified = [{ type: \"create\", event: newEvent }];\n    // sort by ts \n    eventsEdited = eventsEdited.sort((a, b) => +new Date(a.ts) - +new Date(b.ts));\n    return eventsEdited;\n}\n/**\n * Set end edit then update eventsEdited and timeline edited\n * @param ev\n */\nexport function setEndEdit(ev) {\n    if (ev.detail) {\n        this.endEdit = ev.detail;\n        this.eventsEdited = this.setEventEdited();\n        this.timelineEditedElement.updatePeriodAndEvent(this.eventsEdited, [], this.lastEvent);\n        this.setHaveError(false);\n    }\n    else {\n        this.setHaveError(true);\n    }\n}\n","/**\n * Add outside vehicle activity\n * @param eventsEdited\n */\nexport function addActivity(eventsEdited) {\n    // si en mode edit , on enleve event select des events\n    if (this.actionType === 'edit') {\n        eventsEdited = eventsEdited.filter((event) => {\n            return new Date(this.eventSelect.start).valueOf() === new Date(event.ts).valueOf() &&\n                new Date(this.eventSelect.end).valueOf() === new Date(event.end).valueOf() && event.correction ? false : true;\n        });\n    }\n    for (const newEvent of this.customActivityAdd.events) {\n        eventsEdited.push(Object.assign({ modified: true }, newEvent.event));\n    }\n    this.eventsModified = this.customActivityAdd.events;\n    eventsEdited = eventsEdited.sort((a, b) => +new Date(a.ts) - +new Date(b.ts));\n    return eventsEdited;\n}\n/**\n * initialization activity add mode\n */\nexport function initActivityAdd() {\n    if (this.eventSelect.event.customActivityId) {\n        this.activityAddEdit = {\n            customActivityId: this.eventSelect.event.customActivityId,\n            start: new Date(this.eventSelect.event.ts),\n            end: new Date(this.eventSelect.event.end)\n        };\n    }\n}\nexport function setCustomActivityAdd(ev) {\n    this.customActivityAdd = ev.detail;\n    if (this.timelineEditedElement) {\n        this.eventsEdited = this.setEventEdited();\n        this.timelineEditedElement.updatePeriodAndEvent(this.eventsEdited, [], this.lastEvent);\n    }\n}\nexport function setLimitToAddCustomActivity() {\n    if (this.eventSelect && this.eventSelect.event && this.eventSelect.event.activity === 'R') {\n        return { start: this.eventSelect.start, end: this.eventSelect.end };\n    }\n    else {\n        return null;\n    }\n}\n","\n\n/* container with all component */\n.s3pChartComponent.editorTimeline {\n  height: 100%;\n}\n\n/* container without btn send */\n.s3pChartComponent .containerCorrection {\n  height: calc(100% - 47px);\n  overflow: scroll;\n  overflow-x: hidden;\n}\n\n/* btn send */\n.s3pChartComponent .btnCorrectionValid {\n  position: sticky;\n  bottom: 0;\n  width: 100%;\n  background-color: white;\n}\n\n.s3pChartComponent.editorTimeline .btnChart {\n  padding: 0.5em 0.5em 0.5em 0;\n  width: 99%;\n}\n\n/* container form*/\n.s3pChartComponent .container-form {\n  margin: 15px;\n  position: relative;\n  overflow: auto;\n  margin-top: 10px;\n}\n\n.s3pChartComponent .container-remplaceMode,\n.s3pChartComponent .container-textarea,\n.s3pChartComponent .container-dateChange {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n}\n\n.s3pChartComponent .container-dateChange {\n  align-items: baseline !important;\n}\n\n.s3pChartComponent .container-textarea {\n  align-items: end !important;\n}\n\n.s3pChartComponent .contains-timeline {\n  display: grid;\n  grid-template-columns: 60px 1fr;\n  align-items: center;\n  margin-top: 5px;\n  position: relative;\n}\n\n.s3pChartComponent .btn-refresh {\n  align-self: center;\n}","import { Component, h, Prop, Element, State, Event } from '@stencil/core';\nimport debug from \"debug/src/browser\";\nimport { addMinute, removeMinute, addHours, removeHours, prettyDate } from \"../../../utils/utils\";\nimport { replaceActivity, setActivityEdit } from \"./replace/replaceActivity\";\nimport { editStartActivity, setStartEdit } from \"./edit/editor-timeline.editStartActivity\";\nimport { editEndActivity, setEndEdit } from \"./edit/editor-timeline.editEndActivity\";\nimport { addActivity, initActivityAdd, setLimitToAddCustomActivity, setCustomActivityAdd } from \"./add/editor-timeline.addActivity\";\nimport { i18n } from '../../../utils/i18n';\nimport '@s3pweb/s3p-components-utils';\nexport class EditorTimeline {\n    constructor() {\n        this.replaceActivity = replaceActivity;\n        this.setActivityEdit = setActivityEdit;\n        this.editStartActivity = editStartActivity;\n        this.setStartEdit = setStartEdit;\n        this.editEndActivity = editEndActivity;\n        this.setEndEdit = setEndEdit;\n        this.addActivity = addActivity;\n        this.initActivityAdd = initActivityAdd;\n        this.setLimitToAddCustomActivity = setLimitToAddCustomActivity;\n        this.setCustomActivityAdd = setCustomActivityAdd;\n        this.removeHours = removeHours;\n        this.addMinute = addMinute;\n        this.removeMinute = removeMinute;\n        this.addHours = addHours;\n        this.validateCorrectionsMessage = 'validateCreation';\n        this.showWarningMessage = false;\n        this.activitiesOutsideVehicle = [];\n        this.tab = 1;\n        this.customActivityAdd = { events: [], start: null, end: null };\n        this.blockEdition = false;\n        this.haveError = { 1: false, 2: false, 3: false, 4: false };\n    }\n    async componentWillLoad() {\n        this.log = debug('s3pChart:timeline');\n        this.i18n = new i18n(this.el);\n        await this.i18n.load(this.resourcesUrl);\n        this.maxStartFutur = new Date();\n        this.startActivity = {\n            start: this.eventSelect.start,\n            max: this.eventSelect.end,\n            min: removeMinute(new Date(this.eventSelect.start), 1)\n        };\n        this.endActivity = {\n            end: this.eventSelect.end,\n            min: this.eventSelect.start,\n            max: addMinute(new Date(this.eventSelect.end), 1)\n        };\n    }\n    async componentDidLoad() {\n        this.initActivityAdd();\n        this.eventsEdited = this.events.map(x => Object.assign({}, x)); //cloner les events origine\n        this.eventSelectEdited = Object.assign({}, this.eventSelect);\n        // set start and end for timeline\n        this.display_start = removeMinute(new Date(this.eventSelect.start), 15);\n        this.display_end = addMinute(new Date(this.eventSelect.end), 15);\n        // Block edition if correction is invalid\n        if (this.eventSelect.invalidCorrection) {\n            this.blockEdition = true;\n        }\n        // Edition mode\n        if (this.actionType === 'edit' && this.eventSelect.event.correction) {\n            this.comment = this.eventSelect.event.correction.comment;\n            if (this.eventSelect.event.correction.new) {\n                // Activity outside vehicle\n                if (this.eventSelect.event.customActivityId) {\n                    this.tab = 4;\n                }\n                else { // Correction\n                    setTimeout(() => {\n                        this.setActivityEdit({ value: this.eventSelect.event.correction.new.activity });\n                    }, 1000);\n                }\n            }\n            // Show message if correction need to be validated, else change the submit button text\n            if (this.eventSelect.event.correction.toValidate) {\n                this.showWarningMessage = true;\n            }\n            else {\n                this.validateCorrectionsMessage = 'validateEdition';\n            }\n        }\n    }\n    /**\n     * when start and end of one timeline change then other timeline change\n     * @param event\n     */\n    onChangeStartAndEndHandler(event, index) {\n        if (event.detail.start && event.detail.end && !event.detail.firstLoad) {\n            if (index === 0) {\n                this.timelineEditedElement.updateStartAndEnd(event.detail.start, event.detail.end);\n            }\n            else {\n                this.timelineElement.updateStartAndEnd(event.detail.start, event.detail.end);\n            }\n        }\n    }\n    /**\n     * Change of tab\n     * @param tab\n     */\n    changeTab(tab) {\n        this.tab = tab;\n        this.eventsEdited = this.setEventEdited();\n        this.timelineEditedElement.updatePeriodAndEvent(this.eventsEdited, [], this.lastEvent);\n        if (tab === 4 && this.actionType !== 'edit') {\n            this.validateCorrectionsMessage = 'validate';\n        }\n    }\n    /**\n     * get all activities possible according to activity select\n     * @param activity\n     */\n    getPossibleActivities(activity) {\n        let possibleActivities = ['W', 'A', 'R'];\n        return possibleActivities.filter((currentActivity) => { return activity !== currentActivity; });\n    }\n    /**\n     * reposition timeline (start/end display)\n     * @param start\n     * @param end\n     * @param padding\n     */\n    setStartAndEndDisplay(start, end, padding) {\n        this.timelineEditedElement.updateStartAndEnd(removeMinute(new Date(start), new Date(padding)), addMinute(new Date(end), new Date(padding)));\n        setTimeout(() => {\n            this.timelineElement.updateStartAndEnd(removeMinute(new Date(start), new Date(padding)), addMinute(new Date(end), new Date(padding)));\n        }, 500);\n    }\n    /**\n     * add comment\n     * @param event\n     */\n    setComment(event) {\n        this.comment = event.target.value;\n    }\n    /**\n     * when click in valid btn send data to modify\n     */\n    sendCorrection() {\n        let dataSend = [];\n        switch (this.tab) {\n            // CORRECTION\n            case 1:\n            case 2:\n            case 3:\n                if (this.actionType === 'edit' && !this.eventsModified) {\n                    // If correction need to be validated\n                    if (this.eventSelect.event.correction.toValidate) {\n                        const correction = this.eventSelect.event.correction;\n                        // Remove old correction\n                        if (correction.origin.correction) {\n                            delete correction.origin.correction;\n                        }\n                        dataSend.push(Object.assign(Object.assign({ toValidate: false, source: 'legalfiles', correctionId: correction._id }, correction.type === 'edit' && { origin: correction.origin }), { new: correction.new, comment: this.comment, type: correction.type, actionType: this.actionType }));\n                    }\n                }\n                else {\n                    for (let eventModified of this.eventsModified) {\n                        const event = Object.assign({ end: this.eventSelect.end }, eventModified.event);\n                        delete event.tooltip;\n                        delete event.modified;\n                        let eventOrigin = Object.assign({ end: this.eventSelect.end }, this.eventSelect.event);\n                        delete eventOrigin.tooltip;\n                        // Remove old correction\n                        if (eventOrigin.correction) {\n                            delete eventOrigin.correction;\n                        }\n                        let source;\n                        if (event.provider && event.provider === \"legalfilesdecoder\") {\n                            source = \"legalfiles\";\n                        }\n                        else {\n                            source = \"chronology\";\n                        }\n                        dataSend.push(Object.assign({ type: eventModified.type, origin: eventModified.type === \"edit\" ? eventOrigin : null, new: event, source: source, comment: this.comment, actionType: this.actionType }, this.actionType && this.actionType === 'edit' && { correctionId: this.eventSelect.event.correction._id }));\n                    }\n                }\n                this.sendTimelineCorrection.emit(dataSend);\n                break;\n            // CUSTOM ACTIVITY\n            case 4:\n                if (this.actionType === 'edit' && !this.eventsModified) {\n                    const correction = this.eventSelect.event.correction;\n                    dataSend.push({\n                        correctionId: correction._id,\n                        origin: null,\n                        new: correction.new,\n                        comment: this.comment,\n                        type: correction.type,\n                        actionType: this.actionType\n                    });\n                }\n                else {\n                    for (let eventModified of this.eventsModified) {\n                        const event = Object.assign({}, eventModified.event);\n                        const correction = this.eventSelect.event.correction;\n                        // If only one event, edit the custom activity\n                        if (this.actionType === 'edit' && this.eventsModified.length === 1) {\n                            dataSend.push({\n                                correctionId: correction._id,\n                                origin: null,\n                                new: event,\n                                comment: this.comment,\n                                type: correction.type,\n                                actionType: this.actionType\n                            });\n                        }\n                        else { // Else, create new custom activities, and delete old correction if edition\n                            dataSend.push(Object.assign({ type: eventModified.type, origin: null, new: event, source: \"legalfiles\", comment: this.comment }, this.actionType === 'edit' && correction && { correctionIdToDelete: correction._id }));\n                        }\n                    }\n                }\n                this.sendTimelineCorrection.emit(dataSend);\n                break;\n        }\n    }\n    /**\n     * return if form have to disabled\n     */\n    isDisabledForm() {\n        let possibleActivities = ['W', 'A', 'R'];\n        switch (this.tab) {\n            case 1:\n                return !this.blockEdition && this.comment && this.activityEdit && possibleActivities.includes(this.activityEdit) ? false : true;\n            case 2:\n                return !this.blockEdition && this.comment && this.startEdit && new Date(this.startEdit) > new Date(this.eventSelect.start) && new Date(this.startEdit) < new Date(this.eventSelect.end) ? false : true;\n            case 3:\n                return !this.blockEdition && this.comment && this.endEdit && new Date(this.endEdit) > new Date(this.eventSelect.start) && new Date(this.endEdit) < new Date(this.eventSelect.end) ? false : true;\n            case 4:\n                return !this.customActivityAdd.events || !this.customActivityAdd.events.length;\n        }\n    }\n    /**\n     * set event for timeline edited\n     */\n    setEventEdited() {\n        let eventsEdited = this.events.map(x => Object.assign({}, x)); //clone\n        this.eventsModified = null;\n        eventsEdited = eventsEdited.filter((event) => {\n            return new Date(event.ts) <= new Date(this.eventSelect.start) || new Date(event.ts) >= new Date(this.eventSelect.end);\n        });\n        this.eventSelectEdited = Object.assign({}, this.eventSelect);\n        switch (this.tab) {\n            case 1:\n                // remplacer une activité avec une autre activité\n                if (this.activityEdit && this.eventSelect.event.activity !== this.activityEdit) {\n                    eventsEdited = this.replaceActivity(eventsEdited);\n                }\n                this.setStartAndEndDisplay(this.eventSelectEdited.start, this.eventSelectEdited.end, 15);\n                break;\n            case 2:\n                //editer le debut d'une activité\n                if (this.startEdit && new Date(this.startEdit).valueOf() !== new Date(this.eventSelect.start).valueOf()) {\n                    eventsEdited = this.editStartActivity(eventsEdited);\n                }\n                this.setStartAndEndDisplay(this.eventSelect.start, this.eventSelect.end, 15);\n                break;\n            case 3:\n                //editer la fin d'une activité\n                if (this.endEdit && new Date(this.endEdit).valueOf() !== new Date(this.eventSelect.end).valueOf()) {\n                    eventsEdited = this.editEndActivity(eventsEdited);\n                }\n                this.setStartAndEndDisplay(this.eventSelect.start, this.eventSelect.end, 15);\n                break;\n            case 4:\n                if (this.customActivityAdd.events && this.customActivityAdd.events.length) {\n                    eventsEdited = this.addActivity(eventsEdited);\n                }\n                if (this.customActivityAdd.start && this.customActivityAdd.end) {\n                    this.eventSelectEdited = { start: new Date(this.customActivityAdd.start), end: new Date(this.customActivityAdd.end) };\n                    this.setStartAndEndDisplay(this.eventSelectEdited.start, this.eventSelectEdited.end, 60);\n                }\n                break;\n        }\n        return eventsEdited;\n    }\n    /**\n     * reset modify in tab selected\n     */\n    refresh() {\n        switch (this.tab) {\n            case 1:\n                this.activityEdit = null;\n                break;\n            case 2:\n                this.startEdit = null;\n                this.inputDateTimeStart.date = this.eventSelect.start;\n                this.inputDateTimeStart.setError(false);\n                break;\n            case 3:\n                this.endEdit = null;\n                this.inputDateTimeEnd.date = this.eventSelect.end;\n                this.inputDateTimeEnd.setError(false);\n                break;\n        }\n        this.setHaveError(false);\n        this.eventsEdited = this.setEventEdited();\n        this.timelineEditedElement.updatePeriodAndEvent(this.eventsEdited, [], this.lastEvent);\n    }\n    // ALL RENDER\n    /**\n     * REPLACE MODE\n     */\n    renderReplaceMode() {\n        const possibleActivities = this.getPossibleActivities(this.eventSelect.event.activity);\n        return h(\"div\", { class: \"container-remplaceMode\" },\n            h(\"p\", null, this.eventSelect.event ? this.i18n.get(this.eventSelect.event.activity) : \"?\"),\n            h(\"s3p-icon-v2\", { class: \"icon-svg iconClick\", name: \"arrow-forward\" }),\n            h(\"select\", { class: \"select-custom\", onInput: (event) => this.setActivityEdit(event.target) },\n                h(\"option\", { value: \"\" }, this.i18n.get(\"chooseActivity\")),\n                possibleActivities ? possibleActivities.map((activity) => (h(\"option\", { value: activity, selected: this.activityEdit === activity }, this.i18n.get(activity)))) : \"\"),\n            h(\"div\", { class: \"btn-refresh\", onClick: () => { this.refresh(); } },\n                h(\"s3p-icon-v2\", { class: \"icon-svg iconClick\", name: \"custom-refresh\", center: true })));\n    }\n    /**\n     * START EDIT MODE\n     */\n    renderStartEditMode() {\n        return h(\"div\", { class: \"container-dateChange\" },\n            h(\"s3p-input-datetime\", { idInput: \"startActivity\", dateMax: this.startActivity.max, dateMin: this.startActivity.min, date: this.startActivity.start, onDateTimeChange: (ev) => { this.setStartEdit(ev); }, ref: el => (this.inputDateTimeStart = el) }),\n            h(\"div\", { class: \"btn-refresh\", onClick: () => { this.refresh(); } },\n                h(\"s3p-icon-v2\", { class: \"icon-svg iconClick\", name: \"custom-refresh\", center: true })));\n    }\n    /**\n     * END EDIT MODE\n     */\n    renderEndEditMode() {\n        return h(\"div\", { class: \"container-dateChange\" },\n            h(\"s3p-input-datetime\", { idInput: \"endActivity\", dateMin: this.endActivity.min, dateMax: this.endActivity.max, date: this.endActivity.end, onDateTimeChange: (ev) => { this.setEndEdit(ev); }, ref: el => (this.inputDateTimeEnd = el) }),\n            h(\"div\", { class: \"btn-refresh\", onClick: () => { this.refresh(); } },\n                h(\"s3p-icon-v2\", { class: \"icon-svg iconClick\", name: \"custom-refresh\", center: true })));\n    }\n    /**\n     * ADD MODE\n     */\n    renderAddMode() {\n        return h(\"s3p-add-custom-activity\", { activitiesOutsideVehicle: this.activitiesOutsideVehicle, maxStartFutur: this.actionType === \"edit\" ? null : this.maxStartFutur, activityEdit: this.activityAddEdit, pastLimit: this.setLimitToAddCustomActivity(), onSendEventsAdd: (ev) => { this.setCustomActivityAdd(ev); } });\n    }\n    /**\n     * render Tab\n     */\n    setTab() {\n        let mode = 1; // 1 = all tabs, 2 = tabs 1 to 3 & 3 = only last tab\n        // Adapt tabs if event selected has a correction\n        if (this.eventSelect.event.correction) {\n            if (this.eventSelect.event.correction.new && this.eventSelect.event.correction.new.customActivityId) {\n                mode = 3;\n            }\n            else {\n                mode = 2;\n            }\n        }\n        let tabs = [\n            { name: 1, icon: \"custom-repeat\", displayName: this.i18n.get(\"replaceActivity\"), display: true, disabled: mode === 3 },\n            { name: 2, icon: \"custom-clock-forward\", displayName: this.i18n.get(\"editStart\"), display: true, disabled: this.eventSelect.event.activity === \"R\" || mode === 3 },\n            { name: 3, icon: \"custom-clock-return\", displayName: this.i18n.get(\"editEnd\"), display: true, disabled: this.eventSelect.event.activity === \"R\" || mode === 3 },\n            { name: 4, icon: \"add\", displayName: this.i18n.get(\"addActivity\"), display: true, disabled: mode === 2 }\n        ];\n        return h(\"div\", null,\n            h(\"s3p-tabs-v2\", { tabs: tabs, styleGraphic: 2, onChangeTabEvent: (ev) => { this.changeTab(ev.detail); } },\n                h(\"div\", { slot: \"item-1\" }, this.renderReplaceMode()),\n                h(\"div\", { slot: \"item-2\" }, this.renderStartEditMode()),\n                h(\"div\", { slot: \"item-3\" }, this.renderEndEditMode()),\n                h(\"div\", { slot: \"item-4\" }, this.renderAddMode())));\n    }\n    setHaveError(error) {\n        this.haveError[this.tab] = error;\n        this.haveError = Object.assign({}, this.haveError);\n    }\n    renderErrorMessage() {\n        if (this.haveError[this.tab]) {\n            switch (this.tab) {\n                case 2:\n                    return this.i18n.get(\"errorMessageIntervalDate\", prettyDate(this.startActivity.min, \"00/00/0000 00:00\"), prettyDate(this.startActivity.max, \"00/00/0000 00:00\"));\n                case 3:\n                    return this.i18n.get(\"errorMessageIntervalDate\", prettyDate(this.endActivity.min, \"00/00/0000 00:00\"), prettyDate(this.endActivity.max, \"00/00/0000 00:00\"));\n                case 4:\n                    return `${this.i18n.get(\"errorMessageIntervalDate2\")} ${prettyDate(this.maxStartFutur, \"00/00/0000 00:00\")} `;\n            }\n        }\n    }\n    render() {\n        return (h(\"div\", { class: \"editorTimeline s3pChartComponent\" },\n            h(\"div\", { class: \"containerCorrection\" },\n                h(\"div\", null, this.setTab()),\n                h(\"div\", { class: \"container-form\" },\n                    this.showWarningMessage ? h(\"div\", { class: \"container-warning\" },\n                        h(\"p\", null, this.i18n.get(\"correctionToValidate\"))) : \"\",\n                    this.blockEdition ? h(\"div\", { class: \"container-error\" },\n                        h(\"p\", null, this.i18n.get(\"correctionInvalid\"))) : \"\",\n                    h(\"div\", { class: \"container-error\" },\n                        h(\"p\", null, this.renderErrorMessage())),\n                    h(\"div\", { class: \"container-textarea\" },\n                        h(\"p\", null, this.i18n.get(\"comment\")),\n                        h(\"textarea\", { class: \"textarea-custom\", onInput: (ev) => { this.setComment(ev); } }, this.comment ? this.comment : null)),\n                    h(\"div\", { class: \"contains-timeline contains-timeline-noEdited\" },\n                        h(\"p\", null, this.i18n.get(\"before\")),\n                        this.events && this.display_start && this.display_end ?\n                            h(\"s3p-timeline\", { events: this.events, stack: false, lastEvent_end: this.lastEvent, display_start: this.display_start, display_end: this.display_end, onStartAndEndChange: (event) => { this.onChangeStartAndEndHandler(event, 0); }, eventSelect: this.eventSelect, \n                                //  activitiesOutsideVehicle={this.activitiesOutsideVehicle}\n                                ref: el => (this.timelineElement = el) }) : \"\"),\n                    h(\"div\", { class: \"contains-timeline contains-timeline-edited\" },\n                        h(\"p\", null, this.i18n.get(\"after\")),\n                        this.eventsEdited && this.display_start && this.display_end ?\n                            h(\"s3p-timeline\", { events: this.eventsEdited, stack: false, lastEvent_end: this.lastEvent, display_start: this.display_start, display_end: this.display_end, onStartAndEndChange: (event) => { this.onChangeStartAndEndHandler(event, 1); }, eventSelect: this.eventSelect, \n                                //    activitiesOutsideVehicle={this.activitiesOutsideVehicle}\n                                ref: el => (this.timelineEditedElement = el) }) : \"\"))),\n            h(\"div\", { class: \"btnCorrectionValid\" },\n                h(\"button\", { class: \"btnChart\", onClick: () => { this.sendCorrection(); }, disabled: this.isDisabledForm() }, this.i18n.get(this.validateCorrectionsMessage)))));\n    }\n    static get is() { return \"s3p-editor-timeline\"; }\n    static get originalStyleUrls() { return {\n        \"$\": [\"editor-timeline.css\"]\n    }; }\n    static get styleUrls() { return {\n        \"$\": [\"editor-timeline.css\"]\n    }; }\n    static get properties() { return {\n        \"events\": {\n            \"type\": \"any\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"attribute\": \"events\",\n            \"reflect\": false\n        },\n        \"eventSelect\": {\n            \"type\": \"any\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"attribute\": \"event-select\",\n            \"reflect\": false\n        },\n        \"eventsModified\": {\n            \"type\": \"any\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"attribute\": \"events-modified\",\n            \"reflect\": false\n        },\n        \"lastEvent\": {\n            \"type\": \"any\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"attribute\": \"last-event\",\n            \"reflect\": false\n        },\n        \"activitiesOutsideVehicle\": {\n            \"type\": \"unknown\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"any[]\",\n                \"resolved\": \"any[]\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"defaultValue\": \"[]\"\n        },\n        \"actionType\": {\n            \"type\": \"string\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"attribute\": \"action-type\",\n            \"reflect\": false\n        }\n    }; }\n    static get contextProps() { return [{\n            \"name\": \"resourcesUrl\",\n            \"context\": \"resourcesUrl\"\n        }]; }\n    static get states() { return {\n        \"eventsEdited\": {},\n        \"eventSelectEdited\": {},\n        \"display_start\": {},\n        \"display_end\": {},\n        \"tab\": {},\n        \"activityEdit\": {},\n        \"startEdit\": {},\n        \"endEdit\": {},\n        \"activityAddEdit\": {},\n        \"customActivityAdd\": {},\n        \"comment\": {},\n        \"blockEdition\": {},\n        \"startActivity\": {},\n        \"endActivity\": {},\n        \"haveError\": {}\n    }; }\n    static get events() { return [{\n            \"method\": \"sendTimelineCorrection\",\n            \"name\": \"sendTimelineCorrection\",\n            \"bubbles\": true,\n            \"cancelable\": true,\n            \"composed\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"\"\n            },\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            }\n        }]; }\n    static get elementRef() { return \"el\"; }\n}\n"],"mappings":"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"}